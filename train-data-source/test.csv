"1","Как наиболее эффективно хранить и запрашивать сотни string-int словарей на одной машине. Часть 1","Эта статья повествует об эволюции структур данных, которые мы использовали при выполнении запросов в исторической части базы данных временных рядов Agoda, и демонстрирует примеры реализации нескольких дисковых индексных баз данных."
"1","«Атака клонов» или пишем макрос для клонирования репозитория GitLab внутрь XWiki","Наконец-то я ""раздобыл"" немного свободного времени, а значит пришла пора продолжить серию туториалов по XWiki. После публикации одной из моих статей MaxK82 спросил у меня, можно ли как-то в XWiki подключить документацию из git репозитория, так чтобы наладить её версионирование. К сожалению эта статья не ответит на его вопрос, но возможно укажет направление, в котором стоит ""копать"". Поэтому сегодня мы с вами: - создадим простенький, но зато свой макрос в XWiki; - клонируем прямо в XWiki репозиторий с GitLab; - отобразим Readme.md из репозитория внутри страницы XWiki."
"1","Четыре простых лайфхака при написании тестов на Go + testify","Хотя язык программирования Go идёт в комплекте со встроенным тестовым фреймворком, мне сложно себе представить написание всего того количества тестов, что я написал, без testify. В этой заметке я расскажу про несколько маленьких неочевидных трюков, которым я научился в процессе."
"1","Развёртывание XGBoost-моделей с помощью Ray Serve","XGBoost — это оптимизированная библиотека, реализующая алгоритм градиентного бустинга. Эта библиотека спроектирована с прицелом на высокую продуктивность и гибкость, в ней используется параллельная работа с древовидными структурами, что позволяет быстро и эффективно решать различные задачи из сфер Data Science и Machine Learning. В предыдущем материале мы исследовали три подхода к ускорению обучения XGBoost-моделей."
"1","Спроси меня про Go. Отвечаем на распространённые вопросы","В начале марта Яндекс Практикум провёл вебинар «Спроси меня про Go» в формате открытого микрофона: слушатели могли задать любые вопросы о языке Go. Экспертами выступили техлиды курса «Go-разработчик»: Георгий Зуйков — ведущий разработчик в Едадиле и Александр Демиденко — старший разработчик в Яндекс Облаке, в команде Cloudgate. Видеозапись открытого микрофона можно посмотреть по ссылке. Для тех, кому удобнее читать, мы подготовили краткий конспект. "
"1","Пишем приложение на JetBrains Exposed","При всём разнообразии фреймворков для работы с базой данной, стоящих и постоянно развивающихся не так уж и много. И если про Hibernate знают все, а про JOOQ знают очень многие, то слабая популярность Exposed скорее связана с его ориентацией на Kotlin. Если Вы только-только пришли в Kotlin из Java, Вам архитектурные подходы, заложенные в Exposed (переполнение лямбдами и функциями-замыканиями, к примеру) могут показаться дичью, но пугаться не стоит: чем дальше Вы будете осваивать Kotlin, тем привычнее для Вас будут конструкции Exposed. Какое-то время назад здесь уже была статья про Exposed, от компании Otus, но с тех пор прошло больше года и многие практики пользования фреймворком нужно освежить - даже пока я писал эту статью, многое поменялось!"
"1","Цитаты великих айтишников с человеческим лицом","В инете полно списков мудрых вдохновляющих цитат. Это всё здорово, но порой скучновато. Представляешь себе, как человек морщит лоб, изо всех сил делает одухотворённое лицо и выдаёт идеальную шедевральную мысль. Скукота.  Мне больше нравится, когда люди, на которых все равняются или идеализируют их идеи, внезапно в каком-то высказывании показывают себя с очень практической или человеческой стороны. Или подсвечивают особенности другой эпохи. После чего в голове наступает некоторое просветление.  Кент Бек  Кент Бек, создатель методологии ""Разработка через тестирование"" (TDD), как-то написал:  ""Мне платят за работающий код, а не за тесты, поэтому моя философия заключается в том, чтобы тестировать настолько мало, насколько это возможно, чтобы достичь заданного уровня уверенности"". (источник)"
"1","Как развиваться программисту, не меняя работу","Можно ли расти профессионально, не меняя работу. Думаю, я не одна, кто задавался этим вопросом."
"1","Доклады PHDays 11: заражение буткитами, санитайзеры для ядра Linux, новое лицо OSINT и фишинг на официальном сайте","Считаные недели остаются до Positive Hack Days 11. Международный форум по практической безопасности пройдет 18 и 19 мая в Москве. На PHDays традиционно будет три больших трека, посвященных вопросам отражения атак (defensive), защиты через нападение (offensive) и влияния кибербезопасности на бизнес. Сегодня мы представляем первые доклады."
"1","Предварительная программа DUMP-2022 готова. Выступят докладчики из Яндекс, Tinkoff, Ozon, Skyeng, HTML Academy","Программа получается отличной: Андрей Цветцких (Тинькофф), Дмитрий Цепелев (Злые Марсиане), Серёжа Попов (HTML Academy), Андрей Смирнов (X5), Алексей Бородкин (Ozon), Елена Насыбуллина (Selectel), Дмитрий Калаев (ФРИИ), Максим Рогожников (Тинькофф), Антон Назаров (Autodesk), Александр Кириллов (Evrone), Филипп Терехов (Уфимский городской планетарий) — и это не всё. Под катом — подробности программы."
"1","Двенадцатифакторная модель создания CLI-приложений","Современному пользователю сложно представить себе взаимодействие с операционной системой без мышки или пальца на экране. Интерфейс однозначно ассоциируется с чем-то графическим и оконным, основанным на пользовательском опыте  миллионов людей за несколько десятилетий. Это очень удобно, однако в разработке софта есть ещё удалённые уголки Вселенной, где для решения сложных комплексных задач просто нет готовых решений с графическими интерфейсами. Тут на помощь приходит старая добрая командная строка (Command Line Interface, CLI). Поводом для перевода и публикации этой статьи стал интерес команды Artezio к повышению удобства, читаемости и возможности поддержки CLI в части разработки.  В конце концов это такой же интерфейс как и графический, он тоже должен быть удобным.  Мы очень надеемся, что эти знания окажутся полезными для читателей блога."
"1","Код-ревью для начинающих: советы и ориентиры из практики","Привет, Хабр! Сегодня публикуем не совсем обычный для нас текст: решили сделать полезный гайд для новичков в код-ревью. Разобрались, кому нужна и не нужна эта практика, а еще — каких ошибок лучше избежать на старте. Текст пригодится разработчикам и лидам, которые еще близко не знакомы с код-ревью или хотят упорядочить свои знания, узнать лайфхаки из практики. Если вы тоже захотите внести свою лепту, что-то посоветовать или рассказать историю из опыта — пишите в комментариях."
"1","Постигаем искусство написания Dockerfile для Go","Как-то раз, в результате многих сверхурочных часов кропотливой работы, мне удалось разработать простейшее Hello world приложение на Go. И хотя оно всего-навсего производило вывод на экран, а затем заканчивало свою работу, мой начальник был настолько впечатлен, что попросил меня опубликовать мое детище, в написании которого я реализовал весь свой потенциал."
"1","Почему мьютексы в Rust реализованы именно так","Я часто слышу от пробующих работать с Rust системных программистов жалобы на мьютексы и особенно на Rust Mutex API. Жалобы обычно выглядят так:  Они не хотят, чтобы мьютекс содержал данные, только блокировку. Они не хотят управлять «защитным» значением, разблокирующим мьютекс при сбросе, в частности, они просто хотят вызывать операцию unlock, потому что им кажется, что это более явное действие.  Такие изменения превратили бы Rust mutex API в эквивалент C/Posix mutex API. Однажды я даже видел, как один разработчик пытался использовать Mutex<()> и разные хитрости, чтобы его имитировать.  Однако у такого стремления есть проблема: эти два аспекта Mutex неразрывно связаны друг с другом, а также с гарантиями безопасности Rust в целом — изменение одного из них или обоих откроет возможности для возникновения незаметных багов и повреждений из-за гонок данных.  Использование API мьютексов в стиле C, состоящего из набора косвенно защищаемых данных и из функций lock и unlock было бы опрометчивым в Rust, потому что это позволяет безопасному коду легко вносить ошибки, нарушающие безопасность памяти и вызывающие гонки данных.  Прозвучит спорно, но я утверждаю, что это справедливо и для C. Просто в Rust это более очевидно, поскольку Rust тщательно разделяет понятия «безопасного» кода, в который невозможно внести подобные ошибки, и «небезопасного» кода, в который можно вносить такие ошибки. В C такого разделения нет, и в результате этого использующий мьютексы код на C может тривиальным образом создавать серьёзные баги, которые потенциально можно подвергать эксплойтам.  В этом посте я разберу типичный C mutex API, сравню его с типичным Rust mutex API, и расскажу о том, что произойдёт, если мы изменим Rust API так, чтобы он напоминал C."
"1","Копаемся в TypeScript: пишем свои Utility Types. Ключевое слово infer","Йо, Хабр! Меня зовут Алексей Акулов. Я разрабатываю клиентскую часть продукта BIMeister. Почти каждый сталкивался с типами Partial или Record. Там таких еще много, но суть в том, что они входят в ту самую группу Utility Types. Такие штуки представляют из себя разные преобразования одних типов в другие. Partial помечает все поля опциональными. Record отдает тип с бесконечным числом полей одного типа. Тут, вроде, понятно, но как писать собственные? Что такое infer? Как он может нам помочь?"
"1","Безопасная разработка и уязвимости программного кода","Часть 1. Как писать свой код без ошибок На сегодняшний день трудно представить себе какую-либо отрасль бизнеса, в которой не использовались бы информационные технологии. Не только в банковской сфере, но и в промышленности, транспорте, сельском хозяйстве – везде ИТ играют огромную роль. У каждой отрасли своя специфика и найти готовое приложение, которое бы полностью удовлетворяло потребности конкретной организации не всегда возможно. Кроме того, нынешняя геополитическая обстановка жестко диктует свои условия – западные вендоры массово уходят с российского рынка, запрещая продажу лицензий и снимая с поддержки свои решения. Все это также требует разработки собственного программного обеспечения, причем в довольно сжатые сроки. И если многие крупные заказчики поручают создание приложений компаниям разработчикам ПО с многолетним опытом и компетенциями, то небольшие организации с более скромными бюджетами нанимают для разработки программистов, часто студентов. При этом многие разработчики в погоне за сроками и прибылью сознательно пренебрегают требованиями безопасной разработки программного кода. В этой статье мы поговорим об основных принципах и методологиях, которые используются для безопасной разработки. А во второй части статьи рассмотрим методы и средства поиска уязвимостей в чужом программном коде.    "
"1","Загадки быстрого преобразования Фурье","• Метод фазово-амплитудной интерполяции (ФАИ) • Точное определение частоты, амплитуды и фазы гармоник сигнала • Выявление резонансов Алгоритм быстрого преобразования Фурье (БПФ) - важный инструмент для анализа и обработки сигналов различной природы. Он позволяет реконструировать амплитудный и фазовый спектры сигнала в частотной области представления по его амплитудным отсчётам во временной, при этом метод вычислительно оптимизированный при скромном расходе памяти. Хотя в процессе преобразования никакая информация о сигнале не утрачивается (вычисления обратимы до округлений) алгоритму присущи некоторые особенности, которые затрудняют высокоточный анализ и тонкую обработку результатов в дальнейшем. В статье представлен действенный способ преодоления таких ""неудобных"" особенностей алгоритма. Читать на английском"
"1","Разбираем алгоритмы компьютерной графики. Часть 4 – Анимация «Салют»","Еще немного в копилку красивых эффектов и алгоритмов. Вы в своей жизни наверняка видели салют, когда в ночном небе взрывает огненный шар и от него во все стороны медленно разлетаются огни. Давайте попробуем проанализировать то, что мы с вами видим с точки зрения физики и программирования."
"1","Архитектура программного обеспечения ПЛК и дизайн операторской панели","Узкоспециализированный пост, Длиннопост Я не претендую на правильность и точность излагаемого мной текста, просто мои наблюдения и доводы из практики.  Введение Посмотрев не мало постов, вырезок из газет и прочей интернет макулатуры, выяснилось, что очень мало сказано про правильность архитектуры программного обеспечения в промышленной среде, в среде тех самых ""инженеров"" которые не на слуху, и туда не ломятся толпы молодых специалистов, юных бойцов!  Вернее они приходят, но быстро уходят, уж так сложилось, что в этой сфере работы необходимо ""оживлять металлом"" придуманный конструкторским отделом. А это зачастую страшно и не понятно."
"1","Асинхронный телеграм-бот с вебхуками на Heroku","Разрабатывая телеграм-бота для проведения викторины, я даже не задумывался каким количеством человек он будет использоваться и как оказалось очень зря … Посредством этой статьи я поделюсь своим опытом разработки телеграм-бота для большого количества пользователей: разберу свои ошибки и шаги для их решения."
"1","Готовимся к собеседованию по PHP: Что такое «DI», «Container», «Auto-wiring» за семь простых шагов","Статья написана для начинающих разработчиков на языке PHP, чтобы помочь им усвоить понятия, нужные для понимания того, как устроены и работают современные фреймворки на PHP: Dependency Injection, Container, Auto-wiring. Автор надеется, что прочтение статьи поможет вам разобраться в этих вопросах и подготовиться к собеседованию или освоению нового фреймворка. Статья продолжает цикл статей под условным названием ""Готовимся к собеседованию""."
"1","Аналитика чат-ботов на Python","В 2020 году я написал статью Аналитика для Telegram-ботов с достаточно простым решением, с 2 метриками и неоптимальным хранением данных. После появления рекламы в Telegram, аналитика стала ещё более необходима, так как теперь можно рекламировать ботов напрямую пользователям. Плюсы моего нового решения в сравнение с другими на рынке: оно бесплатно, легко внедряется, 20 метрик для аналитики, можно создавать свои метрики, данные хранятся только у вас, подходит для любого количества сообщений в месяц, хранит историю за всё время подключения, может хранить данные по любому количеству ботов в одном месте. Также это решение можно внедрить не только для чат-ботов Telegram, а и для любых других чат-ботов(Slack, Discord, Vk и так далее)."
"1","Mapper Contexts и Supercontexts: Разделение domain-specific и domain-generic ограниченных контекстов","Эта статья является переводом материала «Mapper Contexts & Supercontexts: Decoupling Domain-Specific and Domain-Generic Bounded Contexts». Вы создаете новую систему, и два члена вашей команды предлагают альтернативные архитектуры для отправки уведомлений. Какая из них правильная? Первый разработчик предлагает модель push: ограниченный контекст должен дать указание Notifications отправить уведомление. Notifications должен просто подчиняться командам и отправлять указанные уведомления. Второму разработчику не нравится модель push-уведомлений, и он предлагает решение на основе хореографии: когда ограниченные контексты создают события, Notifications должен подписаться на эти события и определять, когда отправлять уведомление. Как бы вы спроектировали решение? Что еще более важно, как бы вы приняли это решение в команде? Как вы будете разрабатывать наиболее эффективную архитектуру, которая поддерживает краткосрочные цели и долгосрочное развитие?"
"1","Облегчаем работу с SQL в go и при этом не отстреливаем себе ноги","Продолжаю серию статей по программированию на Golang, в которой буду рассказывать о том, как упростить себе жизнь. В то же время я уделю достаточно большое количество внимания тому, как при этом не утонуть в бесконечном количестве ненужных делу фреймворков."
"1","Почему я начал использовать аннотации типов в Python – и вам тоже советую","С появлением подсказок типов (type hints) в Python 3.5+ добавилась опциональная статическая типизация – поэтому эти подсказки так мне нравятся. Теперь я аннотирую ими все мои проекты."
"1","Обнаружение новизны изображений с помощью Python и библиотеки scikit-learn","В статье я расскажу, как с помощью библиотек scikit-learn, opencv, numpy, imutilsс выявить новизну входных изображений. Многие программы требуют наличия возможности решить, принадлежит ли новый объект тому же распределению, что и существующие объекты (это промежуточный результат), или его следует рассматривать как новизну. Часто эта возможность используется для очистки реальных наборов данных."
"1","От песочных часов к пирамиде: как усовершенствовать структуру тестов","Меня зовут Владислав Романенко, я Senior iOS QA Engineer в Badoo и Bumble. Мы регулярно внедряем новые фичи в приложения, и автоматизация тестирования — один из способов не пропустить баги. Фактически автотесты входят в жизненный цикл всех частей наших приложений: бэкенда, сервисов, фронтенда и мобильных клиентов. Чем раньше мы обнаружим ошибку, тем дешевле будет её исправить.  Сегодня я расскажу об автоматизации тестирования в iOS, потому что на протяжении всей своей карьеры в Badoo я плотно занимался тестированием наших нативных iOS-приложений, которые написаны на Objective-C и Swift. Хотя кое-где я буду упоминать характерные для iOS инструменты и термины (например, XCTest), общие принципы и подходы универсальны. Так что, даже если в вашем проекте используется совсем другой стек, статья будет вам полезна."
"1","День Святого Валентина: Как найти девушку при хайтек-эмиграции в «Силиконовый Лес» в Портленд, Орегон?","Silicon Forest в штате Орегон не так известен как Silicon Valley в Калифорнии, но он несомненно входит в топ-5 хайтек-мест в США. Просто факт из Википедии: хотя штаб-квартира Интела остается в Калифорнии, но еще в 1990-х компания начала переносить самую продвинутую разработку микроархитектуры в Орегон. Как очевидец, могу сообщить банальную причину: в начале интернет-бума цены на дома в Долине выросли вдвое, а потом втрое, и агломерация вокруг Портланда стала ближайшим местом бегства из Калифорнии для инженеров, которые хотели купить дом, но не хотели переучиваться на джаву и становиться дотком-миллионерами. Но ""Кремниевым Лесом"" окресности Портленда назвали еще до описываемых событий. После второй мировой войны там выросла компания-производитель осциллографов Tektronix, а в начале 1980-х годов - производитель софтвера для проектировщиков микросхем Mentor Graphics (сейчас Siemens EDA). Чуть позже в Лесу возник производитель ПЛИС Lattice, а потом подтянулись японские компании: Fujitsu, Epson, NEC. Наконец, там сделали отделения IBM и HP, и ""Кремниевый Лес"" состоялся. Жить в области Портленда хорошо. Полтора часа езды налево - океан. Полтора часа направо - горные лыжи. В самом Портленде - самый большой в мире книжный магазин, вокруг много лесных троп и рыбалки. Одна проблема для юного русского программиста: где искать девушек?"
"1","Часть 2. Создание и настройка проекта, работа в редакторах microStudio","Привет, Хабр! Это вторая часть, первую вы можете прочитать здесь (создание проекта, настройка, редактор кода и спрайтов) В этой статье я расскажу о работе с редактором карт в microStudio. Если вы не слышали о проекте microStudio, то можете прочитать мою первую статью. microStudio только набирает свою популярность, я наблюдаю за проектом уже почти год и за это время microStudio сильно выросла. Многие идеи были реализованы раньше запланированного, а реализация мультиплеера в будущем звучит весьма амбициозно. Эта среда программирования поддерживает 4 языка: microScript, Python, Lua и JavaScript."
"1","Самый простой (и неожиданный) алгоритм сортировки?","Представляем вашему вниманию чрезвычайно простой алгоритм сортировки. Может показаться, что он очевидно ошибочен, но мы докажем, что на самом деле он корректен. Мы сравним его с другими простыми алгоритмами сортировки и проанализируем некоторые его любопытные свойства.  1. Алгоритм  Большинству из нас хорошо известны такие простые алгоритмы сортировки, как сортировка пузырьком. По крайней мере, нам так кажется. Оказывались ли вы когда-нибудь в ситуации, когда вам нужно записать псевдокод сортировки пузырьком, и вы осознавали, что он не так прост, как кажется, и с первого раза правильно написать его не удаётся? Нужно внимательно следить за тем, чтобы индексы циклов начинались и заканчивались нужными значениями и не выходили за границы, а также правильно обрабатывать флаговые переменные. Разве не было бы здорово иметь простой алгоритм без всей этой возни? Ниже представлен такой алгоритм, сортирующий массив A из n элементов в неубывающем порядке. Для простоты доказательства массив начинается с 1, то есть имеет элементы A[1],..., A[n].  Алгоритм 1 ICan’tBelieveItCanSort(A[1..n]):  for i = 1 to n do   for j = 1 to n do     if A[i] < A[j] then       swap A[i] and A[j]  Вот, собственно, и всё. Он просто обходит в цикле каждую пару значений (i, j) стандартным способом из двойного цикла for, выполняет сравнение и обмен значениями. Разве можно придумать что-то ещё более простое? Возможно первой реакцией увидевшего этот алгоритм будет что-то типа «это не может быть верно» или «знак неравенства направлен в другую сторону, да и индексы цикла указаны неверно». Но нет, он действительно правильно сортирует в возрастающем порядке."
"1","Таймер в .NET с интервалом 1 мс. Windows","Вы пишите код на платформе .NET под Windows и вам нужно выполнять некоторые действия каждую миллисекунду. Возможно ли это? Какие есть варианты и насколько они надёжны? Разберёмся, что можно использовать, и какие есть гарантии по точности срабатывания. Статья сконцентрирована на поиске такого решения, которое работало бы и под .NET Framework, и под .NET Core / .NET, и в разных версиях ОС, и являлось бы механизмом общего назначения (а не только для программ с GUI, например)."
"1","Учимся правильно писать CSS классы в JSX","Казалось бы такая простая тема как написание css-классов не должна быть проблемой, однако я встречал довольно много проектов, где допускаются ошибки, что приводит к проблемам и плохо читаемому коду. Где проблема актуальна? В экосистеме React, и где мы пользуемся замечательным синтаксисом под названием JSX. В данной статье мы рассмотрим, почему стоит использовать библиотеку clsx практически в каждом React-проекте."
"1","Логирование в объектах Python. Путь перфекциониста","Логировать лучше, чем не логировать. Чем больше разбираешься в чужом и своём коде, тем больше убеждаешься в справедливости этих слов. В Python есть прекрасный модуль logging: настолько удобный и гибкий, насколько вряд ли когда-нибудь понадобится. Мы не будем обсуждать, как его настроить, благо инструкций для этого хватает. Считаем, что всё уже настроено и надо просто добавить логгер в наши классы, чтобы использовать его внутри объектов."
"1","Как мы сделали хакатоны great again","Привет, Хабр! Меня зовут Леонид Тощев и я отвечаю за направление разработки в команде контента Учи.ру. С 2020 года мы регулярно проводим внутренние хакатоны и очень довольны результатами. И для нас это реально работающие штуки, где мы тестируем новые идеи и технологии. Вот как мы этого добились."
"1","15 стран, 9 языков: трудности перевода одного iOS-приложения","В 2017 году у Додо Пиццы появилось приложение для iOS на русском языке, а в 2019 его понадобилось перевести на румынский, а потом ещё на несколько языков. При этом ни одна строка не была обёрнута в макрос NSLocalizedString(…). В этой статье я расскажу, какие инструменты мы использовали для перевода, с какими сложностями столкнулись, о самописных утилитах и об автоматизации процесса."
"1","Публикация Vue.js-приложения в GitHub Packages с помощью GitHub Actions для самых маленьких","В этой серии вы узнаете как собрать докер-образ приложения на Vue.js и как опубликовать его в GitHub Packages. Вот так. Вот в общем-то и... не всё... Одним GitHub Action, как это было для Spring Boot приложения, о котором я рассказывал тут, в этот раз обойтись не получится. Нужно ещё проделать некоторые манипуляции, о которых я и расскажу в данной статье."
"1","Всё о fsync","В PHP (как и в других языках программирования с похожим интерфейсом) при записи в файл нет никаких гарантии, что ваши изменения сразу же будут записаны на диск. В действительности происходит следующее: ваша запись поступает в буфер (process buffer) PHP, и в определенный момент (PHP сам решает когда) содержимое буфера записывается на диск через операционную систему."
"1","11 крупнейших международных соревнований по программированию на 2022 год","В 2021 году благодаря его новым фичам и возрастающей потребности в безупречно проработанном цифровом взаимодействии с клиентами PHP продолжал жить и здравствовать. Что же ждет PHP в будущем? В этой статье мы рассмотрим текущие реалии PHP landscape 2021, ответим на некоторые общие (но не слишком масштабные) вопросы о состоянии языка и дадим оценку будущего как самого языка PHP, так и его экосистемы разработки."
"1","Пишем эмулятор Game Boy на OCaml","Введение  Последние несколько месяцев я работал над проектом под названием CAMLBOY — эмулятором Game Boy, написанным на OCaml, который работает в браузере. Протестировать его можно на следующей странице демо:  Страница демо  Я добавил в демо несколько неофициальных ROM, поэтому в них можно поиграть (рекомендую Bouncing ball и Rocket Man Demo). Также можно поиграть в них в мобильном браузере, на современных смартфонах эмулятор работает с частотой 60 FPS.  Репозиторий  Репозиторий находится здесь:  https://github.com/linoscope/CAMLBOY"
"1","Как с помощью суперпикселей улучшить аннотацию данных","К старту флагманского курса по Data Science рассказываем о суперпикселях, которые улучшают сегментацию данных, и знакомим читателей с платформой Kili Technologies, в инструментах которой они реализованы. Под катом подробности и ссылка на код быстрой реализации алгоритма сегментации SLIC."
"1","Советская «Логика» на листе бумаги","Перед самым Новым годом мне повезло — я нашёл коробку со своими детскими сокровищами. В ней были собраны традиционные настольные игры, которые имел почти каждый советский школьник: старые «Эрудит», «Реверси», лото, классические шашки, домино и вездесущий кубик Рубика. А ещё в коробке оказалась основательно подзабытая мной игра «Логика». Память — странная штука. Если бы я не обнаружил эту игру в коробке, я бы, возможно, никогда и не вспомнил о её существовании. Однако, несмотря на то, что я не играл в эту игру уже очень много лет, мне удалось без труда восстановить в памяти её простые правила. Но обо всём по порядку."
"1","Транзакционное юнит-тестирование приложений с БД","В современном мире множество приложений используют трехуровневую архитектуру с базой данных в слоях данных. Наличие юнит-тестов обычно упрощает поддержку продукта, но присутствие базы данных в архитектуре заставляет разработчиков применять смекалку.  В этой статье я хочу провести обзор разных способов юнит-тестирования приложения с БД и рассказать о способе, который я не видел в русскоязычном сегменте интернета. Статья будет посвящена Python 3, pytest и ORM-фреймворку SQLAlchemy, но методы переносимы на другие инструменты."
"1","Мой личный личинный прогноз на 2022","А в конце года посмотрим насколько я был прав/лев Вот и наступило это чудесное время подвести итоги года ушедшего и взглянуть в год грядущий."
"1","Работа с файлами формата ELF из Хаскела","Работа с файлами формата ELF -- популярная тема на Хабре. (""Введение в ELF-файлы в Linux: понимание и анализ"", ""Минимизация файла ELF – попробуем в 2021?"" и т. д.) Существуют библиотеки для Хаскела для работы с этими файлами: elf (Hackage) и data-elf (Hackage). Эти библиотеки работают только с заголовками и элементами таблиц и не дают возможности сгенерировать объектный файл. Библиотека melf (GitHub, Hackage) даёт возможность полностью разобрать файл ELF и сгенерировать такой файл по несложной структуре данных. Ниже даются примеры её использования."
"1","История одной фичи в Qt Multimedia","Несмотря на рекомендации мейнтейнеров, этот модуль каждый раз возраждается в Qt Essentials Modules. Некоторые требовали закопать и не откапывать, чтобы в мире было меньше страданий. Другие всегда с надеждой смотрели на новые релизы в ожидании долгожданных фиксов, говоря, что надо просто знать тонкости настройки, тогда не больно. Модуль, который хейтили много поколений разработчиков."
"1","Чем хуже, тем лучше","Что может быть лучше десятка пары часов проведенных с дженериками и compile time safety в C#? В этом очерке о единицах измерения, а точнее о том, как можно сделать потенциально очень крутую систему с полной проверкой на этапе компиляции, автоматической конверсией единиц измерения, кастомизированностью и расширяемостью во все стороны! Да, и еще неплохой производительностью. И вообще!"
"1","Пишем бесплатный Gerber-вьювер с открытым исходным кодом под Android с нуля","Привет, Хабр! Меня зовут Сергей Велеско, я Android разработчик в настоящее время и инженер-конструктор печатных плат в прошлой жизни. В этой статье я расскажу, как мне удалось применить знания, полученные в прошлой профессии, и написать простое Android приложение для просмотра Gerber-файлов."
"1","Что нового в Apache Spark 3.2.0 — RocksDB state store","Это важное событие для всех пользователей Apache Spark Structured Streaming. RocksDB теперь доступен как state store бэкенд, поддерживаемый ванильным Spark!"
"1","Итоги хакатона по реабилитации пациентов с помощью ИИ","Всем привет! ФГАУ «Ресурсный центр универсального дизайна и реабилитационных технологий» и наша компания «Наносемантика» 7–9 декабря 2021 провели всероссийский хакатон по разработке решений с использованием искусственного интеллекта в сфере медицины. За три дня участники разработали программы-тренажёры для пациентов с нарушениями речи. За подробностями – добро пожаловать под кат."
"1","Контент с .NET Conf 2021 — видео, презентации, демонстрации и многое другое",".NET Conf 2021 была крупнейшей .NET Conf когда-либо с более чем 80 сессиями от докладчиков со всего мира! Мы хотим сказать огромное спасибо всем, кто выступил в прямом эфире, задавал вопросы в ленте Twitter и участвовал в интерактивах. Смотрите повторы сессий и следите за репозиторием нашей конференции на GitHub, где мы собираем все слайды и демонстрации от докладчиков. Подробности под катом."
"1","Семь основных моментов из дорожной карты Kotlin осень 2021 года","Kotlin создан для воплощения идей в код. Мы стараемся устранить все препятствия, стоящие на пути ваших идей, и сделать чтение и написание Kotlin простым и увлекательным. Чтобы сделать это возможным, нам нужна очень сложная инженерная система, состоящая из многих частей: синтаксис языка, фронтенд и бэкенд компилятора, IDE, инструменты сборки, библиотеки и все остальные инструменты. Чтобы поддерживать и развивать все эти компоненты, в нашей команде трудится около 110 человек. Все они одновременно работают над различными проектами и задачами. Если вы хотите быть в курсе всех этих проектов, можете ознакомиться с публичной дорожной картой Kotlin. Мы только что обновили ее, чтобы отразить наши планы на Kotlin 1.7.0 и далее! Если вы хотите получить краткий обзор происходящего, не вдаваясь в подробности, то можете ознакомиться с сутью того, над чем мы работаем, в этом посте блога, где описаны семь наиболее заметных моментов. Для тех, кто не хочет читать, мы подготовили видеоролик с этими основными моментами!"
"1","Как мы переходили на Node.JS v16, или История о сломанном GC","26 октября 2021 года вышел новый релиз Node.JS 16.13.0 который стал Active LTS.  Как мы переводили на него наш сервис мониторинга и анализа логов PostgreSQL и с какими проблемами столкнулись — в статье ниже."
"1","Как прогуливать встречи в Zoom с помощью Python","Всем привет, я - Денис, Product Manager в банке, а до этого перезапускал вебинарную платформу VirtualRoom. Сегодня я расскажу про свой скрипт, который отмечал меня на лекциях в аспирантуре мехмата МГУ. Полную версию можно посмотреть на youtube."
"1","Григорий Остер — Вредные советы для учителей программировать","Есть у человека такой замечательный перк. Он может обучить другого человека чему-то полезному. Да, конечно, некоторые животные тоже так могут делать, но им далеко до того грандиозного масштаба, с которым мы обучаем друг друга. Мы это дело поставили на поток и проворачиваем в таких объёмах, что тут можно только позавидовать.  Доводилось ли Вам кого-нибудь учить?  Что? Вас уже корёжит и передёргивает от одного только упоминания этого мероприятия? Вы постоянно вспоминаете о том самом стажёре, который был настолько туп, что Вы просто не могли себя сдержать?  Кто-то обвалил собранную базу данных, потому что не увидел разницы между rm -rf ./old и rm -rf . /old?  Бывали ли Вы когда-нибудь на курсах дополнительного образования, которые существуют только для галочки? А может быть, Вы помните себя, когда Вам уж очень хотелось стать пилотом самолёта, но после шести месяцев сидения в бесполезной школе, Вы решили на всё забить, потому что самолёт Вам можно будет увидеть только в следующей жизни?  Заходите, поговорим."
"1","String.format() в 3 раза быстрее в Java 17","Одним из самых удобных способов построения сложных строк является String.format(). Раньше он был чрезмерно медленным, но в Java 17 стал примерно в 3 раза быстрее. В данном выпуске мы выясним, в чем разница и где это вам поможет. А также когда следует использовать format() вместо обычного сложения строк с помощью +."
"1","Красивые визуализации GitHub с помощью PyGraphistry","Привет, Хабр. Меня зовут Антон Иванов, я СТО «Лаборатории Касперского». Сейчас информационная безопасность — обширная область с очень размытым краем. Не всегда можно понять, где кончается обычная разработка и начинается ИБ-разработка. Под катом я расскажу, почему пытаться провести эту грань вообще контрпродуктивно. А также — почему мы занимаемся машинным зрением для беспилотников и что изобрёл автор квиксорта (помимо квиксорта)."
"1","git bisect: путешествие по времени и багам","Привет, Хабр! 11 июня мы в ВСК провели первую олимпиаду по программированию в Москве, Волгограде и Томске. Поучаствовать мог каждый сотрудник с базовыми навыками программирования. Среди участников были не только профессиональные программисты, но и руководители, аналитики, администраторы.  В головах сотрудников ИТ-подразделения скрыт огромный природный интеллект и потенциал. И нам важно было его раскрыть, важно сделать работу айтишника интересной, интенсивной и продуктивной. Олимпиада – отличный формат! Он позволяет вспомнить участие в университетских и школьных олимпиадах, почувствовать вкус и ощутить эмоции от ожидания оценок.  В этой статье мы  расскажем, как настроить «Яндекс.Контест»; приведём задачи; покажем, во сколько нам обошлась олимпиада (сразу признаемся: сумма вышла настолько смехотворной, что мы спрячем её под кат).  Пост будет интересен не только любителям задач, но и всем желающим организовать такую же олимпиаду у себя в команде."
"1","Создаём игру на KPHP с помощью FFI и SDL","KPHP теперь поддерживает механизм Foreign Function Interface (FFI). Мы с Владом решили продемонстрировать его возможности и за сутки написали первую в мире графическую игру на KPHP.  Игру делали с использованием библиотеки SDL:  работали со звуком, обрабатывали события клавиатуры, рисовали шрифты, спрайты, UI.  API и семантика нашего FFI идентичны PHP. Поэтому созданная игра запустится и на KPHP, и на PHP.  Если вам интересны детали реализации, заглядывайте под кат!"
"1","Базовые концепции аллокаторов","Находясь в поисках какой-то агрегированной информации о стандартных приёмах, используемых при проектировании кастомных аллокаторов, я обнаружил, что существует достаточное количество статей о том, как аллокаторы работают в C++, каких-то базовых вариантах или наоборот очень специфических версиях, но ничего достаточно общего. Попался только замечательный доклад замечательного Андрея Александреску про неправильную архитектуру std::allocator и собственно базовые концепции построения своего нового самого крутого в мире аллокатора. Эта статья является довольно вольным переводом второй части его выступления с моими небольшими дополнениями. Конечно же, категорически рекомендую посмотреть оригинальный доклад, но, если вы любитель текстовых версий, прошу под кат."
"1","Как отказаться от промежуточной среды разработки и ничего не потерять","Тестирование кода в промежуточной среде перед выпуском в продакшен считается отраслевым стандартом. Это трудоемкий процесс, от которого в современном мире вполне можно отказаться в пользу тестирования в производственной среде, на реальных пользователях. В этой статье расскажем, какие практики нужно внедрить, чтобы этот переход прошел безболезненно."
"1","«Выстрелить и забыть» в Cats Effect","Последнее время меня часто спрашивают о паттерне ""fire-and-forget"": как его применить в Cats Effect и какие потенциальные проблемы могут возникнуть. Поэтому я решил написать небольшой пост. Надеюсь, вам понравится! Подробнее о Cats Effect и конкурентности читайте в моей книге Essential Effects."
"1","Сравнение php-fpm, nginx-unit и laravel-octane","Сравнение производительности php-fpm, nginx-unit и laravel-octane - что выбрать для разработки микросервисов."
"1","Go: рендеринг изображений в 2D-играх на примере Ebiten","В статье речь идет о Ebiten 1.10. Ebiten — это хорошо продуманная библиотека для создания 2D-игр, написанная Хадзиме Хошем на языке Go. С ее помощью созданы движки ряда мобильных и десктопных игр, как например зарелиженная в Apple Store Bear's Restaurant, или OpenDiablo2 — реализации Diablo 2 с открытым исходным кодом на Go. В этой статье я предлагаю вам познакомиться с несколькими фундаментальными концепциями видеоигр и их реализацией в Ebiten."
"1","Совместное использование типов TypeScript между Backend и Frontend","Если вы используете монорепозиторий, то взаимодействие между клиентом и сервером с общей моделью данных будет проблемой. Без обслуживания дублирование кода приведет к рассинхронизации. Если модель данных изменяется на серверной части - убедитесь, что клиентский код подхватит эти изменения. Иначе клиентский код сильно пострадает при получении несовместимых данных, либо из-за игнорирования дополнений. А это не то, чего вы хотите. Давайте рассмотрим стратегии синхронизации клиентского и серверного кода."
"1","Разбираемся в сортах реактивности","Здравствуйте, меня зовут Дмитрий Карловский и я… прилетел к вам на турбо-реактивном самолёте. Основная суть реактивного двигателя изображена на картинке.   Тут, казалось бы, хаотичное взаимодействие между молекулами, приводит к тому, что улетающие молекулы опосредованно передают импульс корпусу двигателя. Что ж, давайте подумаем, как реактивные принципы решают или наоборот усугубляют проблемы в программировании. Сравним различные подходы к реактивному программированию. И вытащим на поверхность все их подводные камни.  Это — текстовая расшифровка выступления на SECON.Weekend Frontend'21. Вы можете посмотреть видео запись, прочитать как статью, либо открыть в интерфейсе проведения презентаций."
"1","Задачи с чемпионата мира по программированию ICPC 2021","В 2021 году финал чемпионата мира по программированию среди университетских команд ICPC (International Collegiate Programming Contest) прошел в Москве в начале октября.  Участникам нужно было решить 15 задач на трёх компьютерах (раньше было меньше задач и 1 компьютер).  Золото 1) ННГУ (Нижний Новгород) 2) Seoul National University (Корея) 3) ИТМО (Санкт-Петербург) 4) МФТИ (Москва)  Серебро 5) University of Wroclaw (Польша) 6) University of Cambridge (США) 7) Беларусский государственный университет (Минск) 8) University of Bucharest (Румыния)  Бронза 9) Massachusetts Institute of Technology (США) 10) ХНУРЭ (Харьков) 11) University of Illinois at Urbana-Champaign (США) 12) НИУ ВШЭ (Москва)  13) СПбГУ (Санкт-Петербург) 14) University of Warsaw (Польша) 15) Utrecht-Leiden University (Нидерланды) 16) Harvard University (США) 17) University of Central Florida (США) 18) National Taiwan University (Тайвань) 19) Питерский филиал ВШЭ (Санкт-Петербург) 20) МГУ (Москва)"
"2","Руководство GNU troff","Здравствуй, Хабр! Первая часть перевода документации troff в библиотеке Coolib. Сегодня этот замечательный текстовой процессор, старший брат LaTeX, редко упоминается на компьютерных форумах, однако история troff очень и очень достойная. Кроме всего прочего, troff компактный, прекрасно работает с большими текстовыми файлами (например, базами данных огромных размеров), позволяет простыми и удобочитаемыми методами форматировать текст. Наверное, относительная удобочитаемость и заставила меня полюбить этот текстовой процессор, детище Джерри Зальцера, Дж. Ф. Оссанны, Брайана Кернигана и Джеймса Кларка."
"2","Введение в k3s: познакомимся с младшим братом k8s","Вводная часть  Kubernetes, также известный как k8s — это портативная расширяемая платформа с открытым исходным кодом для управления контейнеризованными рабочими нагрузками и сервисами, которая облегчает как декларативную настройку, так и автоматизацию. Kubernetes можно настроить как в локальной, так и в облачной инфраструктуре. Однако, кластер Kubernetes немного сложен в настройке и требует значительных ресурсов, что затрудняет развертывание на локальной машине для обучения или разработки. Это приводит к тому, что не для каждого бизнеса перейти на полноценный k8s представляется возможным. К счастью, на этот случай есть более легкое решение в виде k3s."
"2","Антивирус для Linux – ClamAV","Какая ОС лучше? Windows? Linux? Может MacOS? Холивары на эту тему наверно не кончатся никогда и будут бесконечным оазисом контента для различных статей. Множество копий противоборствующих сторон имеют явно эмоциональный окрас, но для технаря важны только факты и рабочие практики применения. По работе мне время от времени приходится иметь дело с установкой нового ПО на Ubuntu Server. Например бесплатный сервис хранения ссылок linkin.link о котором я писал тут является удачной кооперацией двух миров, (.net) Windows и Linux. Но вот путь к финальному шагу весьма тернист. И периодически это превращается в настоящий квест. Данная статья это туториал (последний раздел) - как установить текущую на данный момент версию антивируса ClamAV 0.104.2 на Ubuntu Server. И ""весёлые"" приключения по миру nix* (первые три раздела)."
"2","Решение головоломки Wordle в командной строке","Я терпеть не мог, когда родственники заставляли меня играть в Scrabble. Единственное, в чём я был хорош — так это в игре Countdown, в той её части, которая связана с числами. А теперь мне досаждает новая игра со словами Wordle, которая вот уже недели две то и дело выскакивает в моей Twitter-ленте.  Моя проблема в том, что я постоянно забываю слова. Даже между тем моментом, когда начинаю предложение, и тем, когда добираюсь до того его места, где я собирался использовать какое-то слово. Я знаю слова, и не могу сказать, что не понимаю их, когда их мне говорят. Но иногда я не могу их вспомнить, и ничего особо не улучшается даже тогда, когда у меня есть несколько букв, входящих в их состав. А вид перемешанных букв, похоже, только всё ухудшает. Неудивительно то, что любые игры, нацеленные на выдумывание слов, мне безразличны.  Мои первые три попытки решить головоломку Wordle провалились. На четвёртой попытке я застрял, так как не мог придумать ни одного слова, которое соответствовало бы подсказкам. Поэтому я сжульничал и обнаружил, что передо мной было одно слово, которое в точности подходило. Это слово выглядело абсолютно очевидным после того, как я понял, что могу использовать одну и ту же букву дважды. Но, как известно, любой вопрос — это ерунда, когда знаешь ответ.    Как бы там ни было, если вы в чём-то похожи на меня, и при этом у вас под рукой имеются вполне обычные инструменты командной строки Unix, возможно, вам будет интересно узнать о том, как и вы можете играть в Wordle. Даже если вы совсем не дружите со словами."
"2","FOSS News №103 — дайджест материалов о свободном и открытом ПО за 20—26 декабря 2021 года","Всем привет!  Продолжаем дайджесты новостей и других материалов о свободном и открытом ПО и немного о железе. Всё самое главное про пингвинов и не только, в России и мире.  Главные темы нового выпуска:  Новости о распространении и борьбе с катастрофической уязвимостью в Log4j. Аналитические статьи о катастрофической уязвимости в Log4j. Критическая уязвимость в плагине «All in One SEO» для WordPress, под угрозой миллионы сайтов. Три четверти из тысячи самых популярных игр Steam работают на Linux, подсчитал проект ProtonDB. Эксперты выпустили подробный технический отчёт о блокировке Tor в России. Пиринговый видеохостинг PeerTube — свободная альтернатива YouTube, без цензуры и блокировок. Онлайн-самоучитель по Kubernetes и деплою с werf для разработчиков. ГК Astra Linux и компания Zabbix обеспечат полную совместимость своих продуктов. Союз ПО и «железа»: «Базальт СПО» на ежегодных итоговых конференциях «Эльбруса» и «Байкала».  И многое другое…  В составлении дайджеста мне помогали qark, invasy и 4 пользователя через нашего Telegram бота [→], приглашаем вас тоже помочь нам через этого бота.  Ещё — мы не только составляем FOSS-дайджесты, но и автоматизируем процесс, все 3 проекта автоматизации тоже являются FOSS, их можно посмотреть на GitHub [→]."
"2","Страх и ненависть в RouterOS: что такое сетевое соединение в ядре Linux (часть 2 — практика)","Ранее в первой (теоретической) части статьи была подробно описана сущность сетевого соединения глазами ядра маршрутизатора. В текущей части мы закрепим информацию в результате рассмотрения работы прикладного протокола DNS через подсистемы RouterOS.  В заключительной части речь пойдёт о диаграмме потока пакетов, при работе с которой важно понимать сущность рассматриваемого сетевого соединения, а также о не документированной в явном виде особенности работы NAT. Материала достаточно много, и чтобы читатель не потерял смысловую нить к концу статьи, она разделена на 3 части: теория, практика и особенность NAT."
"2","КОМПАС-3D и Linux → Часть 2 (Astra Linux и Альт)","Продолжаем качать тему по оперативному запуску КОМПАС-3D в операционных системах на базе ядра Linux. В прошлом посте был описан процесс установки Wine и запуска с его помощью на Ubuntu. Нам очень приятно, что данная статья и описанный в ней процесс запуска КОМПАС-3D в Wine, привлёк внимание пользователей и был осуществлён запуск КОМПАС-3D на ОС FreeBSD. А мы же в это время дошли до отечественных ОС. Начнём с буквы А (чтобы остальным не было обидно) и рассмотрим в этой статье установку на “Альт” и Astra Linux."
"2","FOSS News №93 — дайджест материалов о свободном и открытом ПО за 18—24 октября 2021 года","Всем привет!  Продолжаем дайджесты новостей и других материалов о свободном и открытом ПО и немного о железе. Всё самое главное про пингвинов и не только, в России и мире.  Главные темы нового выпуска:  OS DAY 2021: отчёт с двух дней конференции. Власти предложили российским разработчикам продуктов искать уязвимости в Linux. Представлен PinePhone Pro: продвинутая версия Linux-смартфона. В Москве состоится конференция, посвящённая языку программирования Rust. Brave отказывается от Гугла и переходит на собственный поиск по умолчанию. Европейский проект CLASS: автомобили научились «видеть» обстановку за поворотом. PrestoDB назван лучшим Open Source проектом 2021-го года по версии Bossie Awards (InfoWorld). Первый выпуск коммуникационной платформы Fosscord, совместимой с Discord. Внутреннее устройство Kubernetes-кластера простым языком. «Ижора»: клеточный автомат-компьютер.  И многое другое…  В составлении дайджеста мне помогали qark, invasy и 4 пользователя через нашего бота [→]"
"2","MikoPBX на Aster conf, TTS скрипт для голосования","Совсем недавно завершилась ежегодная конференция Asterconf. Нам посчастливилось в ней участвовать. На этот раз мы приготовили ряд мастер классов по настройке и кастомизации MikoPBX - бесплатной АТС с открытым исходным кодом. Одной из задач мастер классов стояла разработка скрипта для интерактивного голосования за строительство гаражного кооператива. Голосование должно было производится без участия оператора, автоматизированное, с защитой от повторного голосования и конечно с механизмом генерации речи. Если заинтересовало, то под кат, подробно разберем пример реализации... В конце статьи ссылка на видео с конференции..."
"2","Первый стабильный выпуск низкоуровневого корректора раскладок в linux «xswitcher»","Спустя год разработки удалось(у меня нашлась пара недель) довести до рабочего состояния задуманное в предыдущей публикации. А спустя ещё пару месяцев я пишу наконец эту статью. В общем, ура! ""Мы строили-строили и наконец построили"". И оно даже работает/переключает. Причём, и в gnome3 тоже (не без помощи костыля)."
"2","Гость из другого мира: обзор рабочей станции HP 9000 712/60 под управлением HP-UX","Что если я скажу вам, что уже во второй половине 80-х годов ХХ века были машины с многозадачной ОС с развитым графическим интерфейсом, цветными дисплеями высокого разрешения, мощными процессорами и десятками мегабайт оперативной памяти, способные выполнять задачи работы с графикой, обслуживать системы трехмерного моделирования и другие вещи, ставшие под силу ПК только в середине следующего десятилетия?  Добро пожаловать в параллельный мир, мир рабочих станций Unix!"
"2","Делаем сервер из Android-телефона","Некоторое время назад мне пришла в голову интересная идея — превратить свои старые телефоны (их скопилось немало за десять лет) в серверы, в качестве альтернативы покупке Raspberry Pi.   На то было несколько причин: во-первых, у телефонов есть батарея, что для сервера практически бесплатный мини-UPS, во-вторых, внутренняя память смартфона (UFS) работает быстрее и надёжнее, чем SD-карта. В-третьих, у телефонов имеется экран, по которому можно отслеживать состояние сервера.  Ну и в-четвёртых, мне просто было жаль их выбрасывать. Консьюмеризм в наше время предписывает каждый год-два покупать новые смартфоны, производители блокируют возможности железа, которые им невыгодны, прекращают поддержку старых моделей, оставляя людей беспомощными. Миллионы смартфонов отправляются на свалку истории каждый год, хотя каждый из них это мощный компьютер.  TL;DR: в этом посте будут разобраны вопросы установки PostmarketOS на смартфон, поднятия на нём в качестве примера Docker и веб-приложения в нём."
"2","Насколько сложно написать свою операционную систему?","Концептуальная плата REX и простой процессор WRAMP разработаны специально для обучения студентов компьютерной архитектуре, системному программированию и ассемблеру  Десять лет назад ходили анекдоты про Дениса Попова, который долго и упорно настаивал, что написал свою операционную систему «с нуля». Это считалось своеобразным синонимом «изобрести велосипед», то есть совершенно бессмысленной тратой времени. Анекдотизм ситуации состоял в том, что школьник из Нижнего Тагила скопировал Ubuntu, но был искренне убеждён в уникальности своего проекта.  Но действительно честная попытка написать свою операционку — не такое уж и бесцельное занятие (кстати, как сконструировать велосипед с нуля). По ходу дела может оказаться, что некоторые казавшиеся «очевидными» детали современных ОС спроектированы совсем не оптимально. Или вовсе не нужны.  Если бы ядро Unix писали сегодня, оно выглядело бы иначе. Подобные эксперименты могут напомнить о некоторых фундаментальных изъянах, несовершенствах или рудиментах современных ОС, на которые мы привычно закрываем глаза."
"2","Mein Konfig: экскурсия по dotfiles","Приветствую! Я люблю рассматривать чужие dotfiles и рассказы об устройстве рабочего места и окружения. Во-первых, любопытно как работают другие люди. Во-вторых, нередко находишь какой-нибудь полезный трюк или идею. А повышение продуктивности разработчика ПО часто идёт за счёт, казалось бы, мелочей (много кто помнит, что Ctrl-T посылает SIGINFO сигнал, показывающий прогресс копирования cp или dd?). Вот и решил рассказать про своё рабочее окружение, в том числе dotfiles. Перечислю список секций этой статьи, чтобы было примерное представление о чём пойдёт речь: Ввод, ОС, ФС, X11, MRA и MDA, Сеть, Jail, Демоны, MTA, MUA, WWW, PGP, IRC, st, tmux, cd, git, zsh, zsh completion, zsh history, ZLE, zsh prompt, zsh misc, less, grep, .zshenv, autoenv, .zprofile, t, Музыка, mpv, Картинки, Архивы, Feeds, Hjson, *tex*, File transfer, Games, БД, ЯП, Python, Go, C, redo, TAI64, Vim, tags, .vimrc, ~/.vim/pack, ~/.vim/plugin, ~/.vim/ftplugin. Безусловно будут спорные holywar высказывания, так что везде иметь в виду и добавлять фразу «по моему личному мнению»."
"2","О неоправданно хорошей работе [ -z \$var ]","Есть такой сабреддит — /r/nononoyes, где публикуют видео, в которых происходит что-то такое, что, на первый взгляд, кажется ужасно неправильным, идущим к катастрофе. Но в конце всё, чудесным образом, заканчивается хорошо.  В том сабреддите хорошо смотрелась бы команда [ -z \$var ]."
"2","В bash безобидная с виду конструкция [[ \$var -eq 42 ]] умеет выполнять и произвольный код","Знали ли вы о том, что следующий bash-скрипт способен выполнять произвольный код, который предоставит ему пользователь в ответ на запрос скрипта о вводе данных?"
"2","Как расширить приложение в Kubernetes при помощи мультиконтейнерных подов: основные рекомендации","Запустить облачные микросервисы или 12-факторные приложения в Kubernetes относительно просто. Но как насчет запуска приложений, которые явно не предназначены для работы в контейнерной среде?  Команда Kubernetes as a Service Mail.ru Cloud Solutions перевела статью об одном из самых мощных инструментов в Kubernetes — мультиконтейнерном поде. Он позволяет менять поведение приложения, не изменяя его кода. Эта функция удобна для приложений, которые изначально не предназначены для работы в контейнерах.  Итак, посмотрим на примере."
"2","Чини свою Теслу сам, тыжпрограммист","Тыжпрограммист, честь тебе и хвала. Возможно, твоя юность прошла в растянутом шерстяном свитере, но сейчас ты гордо смеешься в лицо любому приколу об айтишниках. Возможно, прошло время ремонта автомобилей с ДВС с мужиками в гаражах, но....Валера, настало твое время. Ты айтишник, на тебя с обожанием смотрят женщины и с завистью мужчины. Хорошо, что ты уже за компьютером, будем в две клавиатуры хакать Теслу."
"2","FOSS News №63 – спецвыпуск о «внутренней кухне» дайджестов","Всем привет!  Вот уже больше года я вместе с несколькими товарищами делаю дайджесты FOSS News для Хабра с материалами о свободном и открытом ПО и железе. Недавно меня пригласили на онлайн-конференцию разработчиков программного обеспечения с открытым кодом «Админка», где я рассказал о наших дайджестах для тех, кто их не видел, и об их «внутренней кухне» для тех кто уже читает. Я подумал, что здесь читателям это тоже может быть интересно, поэтому публикую текст доклада, на котором я основывал своё выступление."
"2","C и Python: мост между мирами","Вам интересно подключить всю мощь Python в свою программу на C? Отлично: в статье содержится минимальный крэш-курс по подключению интерпретатора Python, загрузке своего кода и взаимодействию с ним из программы на C."
"2","FOSS News №56 – дайджест материалов о свободном и открытом ПО за 8-14 февраля 2021 года","Всем привет!  Продолжаем дайджесты новостей и других материалов о свободном и открытом ПО и немного о железе. Всё самое главное про пингвинов и не только, в России и мире. IT гиганты объединились для создания Rust Foundation; интервью с заместителем генерального директора компании «Базальт СПО» Алексеем Новодворским — о Linux в «постинтеловскую» эпоху; отчёт за 3 года работы форка Sphinx под названием Manticore Search; рассказ об Open Source на уровне одной компании и первые уроки участия в сторонних проектах; WordPress охватывает 40% сайтов; продолжается набор наставников для программы Google Summer of Code 2021; видеообзор OpenSUSE и многое другое."
"2","Заметки о Unix: системный вызов write(), на самом деле, не такой уж и атомарный","Недавно я читал материал Эвана Джонса «Устойчивое хранение данных и файловые API Linux». Я полагаю, что автор этой довольно хорошей статьи ошибается, говоря о том, чего можно ожидать от команды write() (и в том виде, в каком она описана в стандарте POSIX, и на практике). Начну с цитаты из статьи:  Системный вызов write() определён в стандарте IEEE POSIX как попытка записи данных в файловый дескриптор. После успешного завершения работы write() операции чтения данных должны возвращать именно те байты, которые были до этого записаны, делая это даже в том случае, если к данным обращаются из других процессов или потоков (вот соответствующий раздел стандарта POSIX). Здесь, в разделе, посвящённом взаимодействию потоков с обычными файловыми операциями, имеется примечание, в котором говорится, что если каждый из двух потоков вызывает эти функции, то каждый вызов должен видеть либо все обозначенные последствия, к которым приводит выполнение другого вызова, либо не видеть вообще никаких последствий. Это позволяет сделать вывод о том, что все файловые операции ввода/вывода должны удерживать блокировку ресурса, с которым работают.  Означает ли это, что операция write() является атомарной? С технической точки зрения — да. Операции чтения данных должны возвращать либо всё, либо ничего из того, что было записано с помощью write(). […]."
"2","Спецвыпуск FOSS News №50 – главное за 2020 год","Всех с наступившим!  Новогодняя суета (почти) прошла, самое время подвести итоги года в поле FOSS новостей и других материалов, вышедших за нелёгкий 2020 год.  Кратко:  Сообщества свободных и открытых проектов приняли активное участие в противодействии COVID-19 и пострадали от них тоже как многие другие. Показательно, что принципы, на которых строились международные FOSS сообщества, оказались очень полезны во время пандемии. Ну и навыками удалённой работы смогли поделиться. В России набирают обороты внедрения отечественных GNU/Linux дистрибутивов. Силовики, РЖД, атомщики, администрации – первые в этом деле. Технологии использованы, пингвинов стало больше. Приняты ли принципы FOSS? Вопрос открытый. В мире местами продолжаются попытки массового внедрения GNU/Linux для десктопов, ну а в прочих приложениях он понятно повсеместен. Прочий FOSS софт тоже весьма популярен. Сложно говорить о динамике, метрик недостаточно. Но многие эксперты говорят о всё большей важности открытых технологии и, более того, об их фундаментальном значении. Взаимоотношения FOSS и бизнеса сложно назвать благополучными. Всё больше сообществ жалуются на односторонний характер партнёрства и пытаются найти выход из этой ситуации. Было много примеров открытия кода и данных. Открытых «железных» проектов было немало, ещё больше проектов с предустановленным GNU/Linux. Удалось собрать немаленькую подборку материалов как для начинающих так и для опытных FOSS разработчиков собственно о самом подходе к разработке софта и о связанных с этим вещах. Ещё есть несколько подборок альтернатив проприетарного софта, в том числе аналогов Zoom и Slack, особо актуальных в последнее время. Две отдельные категории – лучшая серия статей и (не)холивар года. Не пропустите, там интересно ;) Разные важные материалы, не попавшие в категории выше.  Под катом приведены полные списки материалов по каждой категории."
"2","FOSS News №46 – дайджест новостей и других материалов о свободном и открытом ПО за 7-13 декабря 2020 года","Всем привет!  Продолжаем дайджесты новостей и других материалов о свободном и открытом ПО и немного о железе. Всё самое главное про пингвинов и не только, в России и мире. Red Hat прекращает разработку CentOS 8 в пользу тестового CentOS Stream; Google делает Fuchsia более открытой; анатомия GNU/Linux; Google представил рейтинг критически важных открытых проектов; IM-мессенджер на своём сервере со сквозным шифрованием; лучшие игры для Linux и многое другое."
"2","ISH Shell или возможно ли установить и использовать Linux на iOS","Сегодня я хочу рассказать вам о таком приложении как ISH. ISH - это проект с открытым исходным кодом, позволяющее в виде приложения эмулировать полноценный линукс на вашем iOS (или iPadOS) устройстве. Давайте разберемся как это сделать и есть ли у подобной технологии реальное применение и будущее или это очередная игрушка для ""мамкиных хакеров"""
"2","Реализация epoll, часть 1","Сегодня мы публикуем перевод первой статьи из серии материалов, посвящённых реализации epoll в ядре Linux 3.16.1*. Автор исходит из предположения о том, что читатели знакомы с API и с использованием epoll. Он уделяет основное внимание реализации подсистемы epoll в ядре Linux, а не особенностям её применения. Если вы не знаете о том, как пользоваться epoll — автор рекомендует сначала почитать документацию. Это значительно облегчит понимание деталей реализации этого механизма.    * — Linux 3.16.1 достаточно старое ядро, но информация работы с epoll актуальна и сегодня (прим. переводчика)."
"2","Opennebula. Короткие записки","Всем привет. Данная статья написана для тех, кто до сих пор мечется между выбором платформ виртуализации и после прочтения статьи из серии «Поставили proxmox и вообще все отлично, 6 лет аптайм не единого разрыва». Но после установки того или иного коробочного решения, возникает вопрос, а как бы тут подправить и тут, чтобы мониторинг был более понятный и вот тут, чтобы контролировать бэкапы…. А потом приходит время и вы понимаете, что хочется чего то более функционального, ну или хочется чтобы внутри вашей системы стало все понятно, а не этот черный ящик или хочется использовать что то больше, чем гипервизор и куча виртуальных машин. В данной статье будет немного размышлений и практика на основе платформы Opennebula — выбрал т.к. не требовательна к ресурсам и архитектура не такая сложная."
"2","FOSS News №30 – дайджест новостей свободного и открытого ПО за 17–23 августа 2020 года","Всем привет!  Продолжаем дайджесты новостей и других материалов о свободном и открытом ПО и немного о железе. Всё самое главное про пингвинов и не только, в России и мире. Этот выпуск получился особенно серьёзным по уровню поднятых вопросов. Разбираем проблемы Mozilla и рассматриваем вопрос почему это касается не только одной компании, отмечаем 20-летие FreeBSD Foundation, узнаём об основании отдельного от Mozilla фонда Rust Foundation, радуемся появлению нового свободного драйвера для NTFS от российских разработчиков, изучаем как разработчики Linux смогли успешно выпустить недавний большой релиз, холиварим (или нет) на тему дизайна и удобства для пользователей свободного ПО и ещё узнаём много другого нового."
"2","FOSS News №26 – обзор новостей свободного и открытого ПО за 20–26 июля 2020 года","Всем привет!  Продолжаем обзоры новостей свободного и открытого ПО и немного железа. Всё самое главное про пингвинов и не только, в России и мире. Два анонса ноутбуков специально созданных под GNU/Linux, о децентрализованном решении для мессенджера на базе Matrix как альтернативе Telegram, «Пингвиний корпус» в США ставит GNU/Linux на старые компьютеры и раздаёт желающим для дистанционного обучения во время пандемии, об альтернативном «луковом» вебе для владельцев ресурсов, ещё раз про игры с пингвинами и многое другое."
"2","Бесплатный minecraft сервер на AWS с нулевым знанием linux","Привет, Хабр! Точнее, проходимцы, которые ищут, как поднять minecraft сервер для игры с друзьями.  Статья рассчитана на непрограммистов, несисадминов, в общем, не на основную аудиторию Хабра. В статье — пошаговая инструкция по созданию minecraft сервера с выделенным IP, адаптированная для людей, далёких от IT. Если это не про вас — статью лучше пропустить."
"2","Обзор гибридной системы мониторинга Okerr","Два года назад я уже делал пост Простой failover для вебсайта про okerr. Сейчас есть некоторое развитие проекта, а еще я опубликовал исходный код серверной части okerr под открытой лицензией, поэтому и решил написать на хабр этот небольшой обзор.   [ full size ]  Кому это может быть интересно  Вам это может быть интересно если вы работаете небольшой командой или вообще один. У вас нет мониторинга и вы не уверены, точно ли он нужен. Либо же вы пробовали какой-то популярный серьезный мониторинг ""для больших мальчиков"", но для вас он как-то ""не взлетел"", или работает в почти дефолтной конфигурации и не сильно изменил вашу жизнь. А еще — если вы точно не планируете выделять целого сотрудника (а то и отдел) на то, чтобы тот хотя бы пару часов в день мониторил в дашборд мониторинга или настраивал его.  Чем необычен okerr  Дальше я покажу интересные особенности окерра, которые отличают его от некоторых других мониторингов.  Okerr — это гибридный мониторинг  При внутреннем мониторинге на наблюдаемых машинах крутится ""агент"", который передает данные на сервер мониторинга (например, свободное место на дисках). При внешнем — сервер по сети выполняет проверки (например, ping или доступность вебсайта). У каждого подхода свои ограничения. Okerr использует оба варианта. Проверки внутри серверов выполняются очень легким (30Kb) агентом или вашими собственными скриптами и приложениями, а сетевые — через сенсоры okerr в разных странах."
"2","Сказ о том, как сделать машину времени для базы данных и случайно написать эксплойт","Доброго времени суток, Хабр.  Приходилось ли вам задумываться как поменять время внутри базы данных? Легко? Ну в некоторых случаях да, несложно — linux команда date и дело в шляпе. А если нужно поменять время только внутри одного экземпляра бд если их на сервере несколько? А для отдельно взятого процесса базы данных? А? Эээ, так-то, дружок, в этом-то все и дело. Кто-то скажет, что это очередной сюр, не связанный с реальностью, который периодически выкладывают на Хабре. Но нет, задача вполне реальная и продиктована производственной необходимостью — тестированием кода. Хотя соглашусь, кейс тестирования может быть достаточно экзотический — проверить как ведет себя код на определенную дату в будущем. В данной статье я рассмотрю подробно как эта задача решалась, и заодно захватим немного сам процесс организации тестовых и dev-стендов для базы Oracle. Впереди длинное чтиво, устраивайтесь поудобнее и прошу под кат."
"2","oVirt за 2 часа. Часть 1. Открытая отказоустойчивая платформа виртуализации","Введение  Open source проект oVirt — свободная платформа виртуализации корпоративного уровня. Пролистав habr, обнаружил, что oVirt освещен здесь не так широко, как того заслуживает. oVirt фактически является апстримом для коммерческой системы Red Hat Virtualization (RHV, ранее RHEV), растет под крылом Red Hat. Чтобы не возникло путаницы, это не то же, что CentOS vs RHEL, модель ближе к Fedora vs RHEL. Под капотом — KVM, для управления используется веб-интерфейс. Базируется на ОС RHEL/CentOS 7. oVirt может использоваться как для «традиционной» серверной, так и десктопной виртуализации (VDI), в отличие от решения VMware обе системы могут уживаться в одном комплексе. Проект хорошо документирован, давно достиг зрелости для продуктивного применения и готов к высоким нагрузкам. Эта статья — первая в цикле о том, как построить работающий отказоустойчивый кластер. Пройдя по ним, мы за короткое (порядка 2-х часов) время получим полностью работающую систему, хотя ряд вопросов, конечно, раскрыть не удастся, постараюсь осветить их в следующих статьях."
"2","Mikrotik RouterOS в Docker с помощью Qemu","Всем доброго времени суток! В данной статье я хочу рассказать об одном OpenSource проекте под названием Docker RouterOS, изначально он был создан в качестве полигона для прогонки интеграционных тестов и ничего более, но со временем, по просьбе пользователей, был добавлен ряд улучшений расширяющих спектр возможностей.  Рассказывать буду о причинах появления проекта, его первоначальных итерациях, а так же о проблемах с которыми пришлось столкнуться.  Продолжение под катом."
"2","Изучаем VoIP-движок Mediastreamer2. Часть 6","Материал статьи взят с моего дзен-канала.   Передача звукового сигнала через RTP-поток   В прошлой статье мы собрали схему дистанционного управления из генератора и детектора тональных сигналов, которые работают внутри одной программы. В этой статье мы научимся использовать протокол RTP (RFC 3550 — RTP: A Transport Protocol for Real-Time Applications) для приема/передачи звукового сигнала по Ethernet-сети."
"2","Strace в Linux: история, устройство и использование","В Unix-подобных операционных системах общение программы с внешним миром и операционной системой происходит через небольшой набор функций — системных вызовов. А значит, в отладочных целях полезно бывает подсмотреть за выполняемыми процессами системными вызовами.  Следить за «интимной жизнью» программ на Linux помогает утилита strace, которой и посвящена эта статья. К примерам использования «шпионского» оборудования прилагаются краткая история strace и описание устройства подобных программ."
"2","Разворачиваем Mediawiki на Debian (это очень просто)","Если вам нужна своя Вики, но не знаете с чего начать — добро пожаловать. В Linux я новичок, этим мой степ-бай-степ будет особенно полезен. Рассматривается:  установка Debian стэка LAMP запуск на этой основе Вики на популярном движке Mediawiki"
"2","Использование QubesOS для работы с Windows 7","На Хабре не так много статей, посвященных операционной системе Qubes, а те, что я видел мало описывают опыт применения. Под катом надеюсь это исправить на примере использования Qubes в качестве средства защиты (от) среды Windows и, попутно, оценить количество русскоговорящих пользователей системы."
"2","Ceph через iSCSI — или на лыжах стоя в гамаке","Есть ли среди нас (цефоводов) те, кто не любит «профессиональный экстрим»?  Вряд ли — иначе бы мы не кувыркались с этим чрезвычайно интересным и забавным продуктом.  Многие из тех, кто занимались эксплуатацией Ceph, встречали один не слишком частый (а скорее даже очень нечастый) но иногда востребованный кейс — подключить Ceph по iSCSI или FC. Зачем? Ну, например, подать образ с Ceph на почему-то еще не виртуализированный сервер Windows или Solaris. Или на виртуализированный, но посредством гипервизора, который не умеет Ceph — а их, как мы знаем, хватает. Например? Ну, например, HyperV или ESXi, которые активно используются. И если возникает задача подать образ с Ceph в гостевую машину, это превращается в весьма увлекательную задачу."
"2","Запускаем кроссбраузерные UI test с Cucumber и Selenoid в Gitlab CI c Allure отчетом","Cucumber – это инфраструктура тестирования, позволяющая преодолеть разрыв между разработчиками ПО и бизнес-менеджерами. Тесты пишутся на простом языке управляемой поведением разработки (BDD) в стиле Given, When, Then (условия, операция, результат), которой понятен любому пользователю. Затем контрольные тесты записываются в файлы функций, охватывающие один или несколько сценариев тестирования. Cucumber интерпретирует тесты на указанном языке программирования и использует Selenium для управления тестами в браузере.  Selenoid представляет собой альтернативное решение Selenium Server, хотя суть та же — организация работы драйверов.  В этом посте будет запуск простого браузерного теста с помощью Cucumber и Selenoid в Gitlab CI c Allure отчетом в конце."
"2","postfix+dovecot+mysql в FreeBSD","Введение  Почтовый сервер хотел изучить уже давно, но руки дошли только сейчас, да и информации корректной не особо много удавалось найти, поэтому решил написать как можно более подробную публикацию. В данной публикации пойдёт речь не только о postfix, dovecot, mysql, postfixadmin, а также и о spamassassin, clamav-milter(специальная версия clamav для почтовых серверов), postgrey, а также о возможности переноса спама в папку «Спам»(dovecot-pigeonhole)."
"2","Ansible + авто git pull в кластере виртуальных машин в облаке","Доброго дня  У нас имеется несколько облачных кластеров с большим количеством виртуальных машин в каждом. Все это дело у нас хостится в Hetzner'e. В каждом кластере у нас имеется по одной мастер-машине, с нее делается снэпшот и автоматически разносится по всем виртуалкам внутри кластера.  Эта схема не позволяет нам нормально использовать gitlab-runner'ы, так как возникает очень много проблем при появлении множества одинаковых зарегистрированных раннеров, что и побудило к нахождению обходного пути и к написанию этой статьи/мануала.  Вероятно, это не best practice, но это решение показалось максимально удобным и простым.  За туториалом прошу под кат."
"2","Oracle VM Server for SPARC для чайников (How-to)","Небольшой How-to для начинающих работать с ОС Solaris и платформой виртуализации Oracle VM Server for SPARC, ранее известной как Sun Logical Domains.    Logical Domains — технология виртуализации и разделения физических ресурсов для линейки UNIX-серверов, основанных на архитектуре SPARC V9, представленная в мае 2007 корпорацией Sun Microsystems.  Управлять гипервизором возможно из командной строки или визуальными интерфейсами управления, последнее не будет здесь рассматриваться.  Примеры приведены для ОС Solaris 10, в Solaris 11 стоит учитывать особенности настройки сети."
"2","Хаки при работе с большим числом мелких файлов","Идея статьи родилась спонтанно из дискуссии в комментариях к статье «Кое-что об inode».    Дело в том, что внутренней спецификой работы наших сервисов является хранение огромадного числа мелких файлов. На данный момент у нас порядка сотен терабайт таких данных. И мы натолкнулись на некоторые очевидные и не очень грабельки и успешно по ним прошлись.  Поэтому делюсь нашим опытом, может кому и пригодится."
"2","Сравнительное тестирование работы PostgreSQL с большими страницами Linux","Ядро Linux предоставляет широкий спектр параметров конфигурации, которые могут повлиять на производительность. Это все о получении правильной конфигурации для вашего приложения и рабочей нагрузки. Как и любая другая база данных, PostgreSQL использует ядро Linux для оптимальной конфигурации. Плохо настроенные параметры могут привести к снижению производительности. Поэтому важно, чтобы вы измеряли производительность базы данных после каждого сеанса настройки, чтобы избежать снижения производительности. В одной из моих предыдущих публикаций, «Настройка параметров ядра Linux для оптимизации PostgreSQL», я описал некоторые наиболее полезные параметры ядра Linux и то, как они могут помочь вам повысить производительность базы данных. Теперь я собираюсь поделиться своими результатами тестов после настройки больших страниц Linux с другой рабочей нагрузкой PostgreSQL. Я выполнил исчерпывающий набор тестов для разных размеров загрузки PostgreSQL и одновременного количества клиентов.  Машина для тестирования  Supermicro server: Intel® Xeon® CPU E5-2683 v3 @ 2.00GHz 2 sockets / 28 cores / 56 threads Memory: 256GB of RAM Storage: SAMSUNG SM863 1.9TB Enterprise SSD Filesystem: ext4/xfs OS: Ubuntu 16.04.4, kernel 4.13.0-36-generic PostgreSQL: version 11"
"2","Успех социального эксперимента с поддельным эксплойтом для nginx","Прим. перев.: Автор оригинальной заметки, опубликованной 1 июня, решил провести эксперимент в среде интересующихся информационной безопасностью. Для этого он подготовил поддельный эксплойт к нераскрытой уязвимости в веб-сервере и разместил его в своём твиттере. Его предположения — быть мгновенно разоблачённым специалистами, которые увидят очевидный обман в коде, — не просто не оправдались… Они превзошли все ожидания, причём в обратную сторону: твит получил огромную поддержку от многочисленных людей, которые не стали проверять его содержимое.    TL;DR: ни в коем случае не используйте конвейеризацию файлов в sh или bash. Это отличный способ утратить контроль над компьютером."
"2","Подарок к 9 мая","Близится 9 мая. (Тот кто будет читать этот текст позже — сегодня 8 мая 2019 года). И в этой связи я хочу сделать нам всем вот какой подарок.  Совсем недавно я обнаружил у себя в стопке заброшенных CD-дисков игру Return to castle Wolfenstein. Смутно припоминая, что «кажется, игра была неплохая», я решил запустить ее под Linux. Ну так, не сколько чтобы поиграть, а больше покопаться. Тем более, что начались майские праздники, появилось свободное время."
"2","Проверка rdesktop и xrdp с помощью анализатора PVS-Studio","Это второй обзор из цикла статей о проверке открытых программ для работы с протоколом RDP. В ней мы рассмотрим клиент rdesktop и сервер xrdp."
"2","Оптимизация производительности apache2","Многие используют apache2 в качестве веб-сервера. Однако мало кто задумывается об оптимизации его производительности, что прямо пропорционально сказывается на скорости загрузки страниц сайта, скорости обработки скриптов (в частности php), а также на росте нагрузки на ЦП и увеличении объёма используемой ОЗУ.  Таким образом, следующий мануал, должен помочь начинающим (и не только) пользователям. Все нижеприведённые примеры использовались на Raspberry PI 3, Debian 9, Apache 2.4.38, PHP 7.3."
"2","Приключения с ptrace(2)","На Хабре уже писали про перехват системных вызовов с помощью ptrace; Алекса написал про это намного более развёрнутый пост, который я решил перевести.  С чего начать  Общение между отлаживаемой программой и отладчиком происходит при помощи сигналов. Это существенно усложняет и без того непростые вещи; ради развлечения можете прочесть раздел BUGS в man ptrace.  Есть как минимум два разных способа начать отладку:  ptrace(PTRACE_TRACEME, 0, NULL, NULL) сделает родителя текущего процесса отладчиком для него. Никакого содействия от родителя при этом не требуется; man ненавязчиво советует: «A process probably shouldn't make this request if its parent isn't expecting to trace it.» (Где-нибудь ещё в манах вы видели фразу «probably shouldn't»?) Если у текущего процесса уже был отладчик, то вызов не удастся. ptrace(PTRACE_ATTACH, pid, NULL, NULL) сделает текущий процесс отладчиком для pid. Если у pid уже был отладчик, то вызов не удастся. Отлаживаемому процессу шлётся SIGSTOP, и он не продолжит работу, пока отладчик его не «разморозит».  Эти два метода полностью независимы; можно пользоваться либо одним, либо другим, но нет никакого смысла их сочетать."
"2","Собственный DHCP-сервер силами bash","Я люблю автоматизировать процесс и писать собственные велосипеды для изучения того или иного материала. Моей новой целью стал DHCP-сервер, который будет выдавать адрес в маленьких сетях, чтобы можно было производить первоначальную настройку оборудования.  В данной статье я расскажу немного про протокол DHCP и некоторые тонкости из bash'а."
"2","Гипервизор для чайников","Всем привет! Решил поделиться опытом создания гипервизора на базе Ubuntu server 14.04 LTS и бесплатной виртуальной машине virtualbox 5.2 с вэб-интерфейсом управления как самим сервером (webmin), так и виртуальными машинами (phpvirtualbox). В сети можно найти кривоватую инструкцию по поднятию вышесказанного на ubuntu server 16.04, но эта инструкция морально устарела и предлагает версию virtualbox 5.0-5, не смотря на то, что в 16.04 в официальных репозиториях уже давно прижилась версия 5.2. Тут мы это все исправим. Данная инструкция применима как к ubuntu server 14.04, так и к 16.04. На более свежих версиях не проверял, но подозреваю что так же будет работать. Итак, начнем.  1. Для начала после установки ubuntu следует обновить все пакеты и ядро:  sudo apt-get -y update && sudo apt-get -y dist-upgrade"
"2","Первые впечатления от перехода с Ubuntu 16.04 LTS на Ubuntu 18.04 LTS","Как известно, основное визуальное изменение в релизе 18 — это отказ от Unity и переход на Gnome 3. Здесь хочу поделиться своими впечатлениями от перехода с 16 на 18"
"2","Непрофессиональное видеонаблюдение квартиры занятно и недорого","С момента как у меня в квартире на страже появилась GSM сигнализация, появилась мысль о том, что неплохо бы иметь в мое отсутствие в квартире и «глаза» в случае срабатывания датчиков сигнализации (а может срабатывание ложное?). Поскольку я инженер в области информационных технологий, ни о каком профессиональном решении в виде регистратора и кучи камер речь не шла — только все сам, своими руками. Бюджет тоже сразу было решено обнулить ограничить, а в случае успешности проекта уже думать о его дальнейшем улучшении и модернизации."
"2","Просто о сложном. Начало создания беспроводного «умного дома». На основе технологии Linux, Z-Wave и ПО MajorDoMo","Часть первая: Небольшая пошаговая инструкция по установке и первоначальной настройке «Умного дома»    Так случилось, что жизнь заставила приступить к частичной автоматизации квартиры, особенно в части её безопасности, краны, газ, вход, электричество, ну а потом уже всё остальное.  Для себя определил следующие критерии:  Место — квартира, где переделка (существенная переделка чего-либо не планируется). Возможность интеграции всех решений в единую систему УД с открытым кодом . Возможность постепенного расширения (масштабирования) функционала. По-возможности, минимальные затраты. По возможности покупка элементов системы в РБ или же в РФ, без всяких заказов с зарубежных сайтов. Пришел, посмотрел, купил. По возможности русскоязычный интерфейс, документация, поддержка.  Для себя определил открытый протокол Z-wave, сердце системы – однопалатный компьютер Raspberry PI (как раз у меня по работе такой и был) с контроллером Razberry, работающем на протоколе Z-Wave+. Программное обеспечение выбрал MajorDoMo. И протокол и ПО удовлетворяют мои требования.  В качестве помощника решил привлечь своего старшего сына (школьника, закончил 8-ой класс). И понял существующая документация довольно сложна для обычного пользователя, не сталкивающегося с настройкой, конфигурированием и программированием.  Вот и решил немного восполнить этот пробел."
"2","/boot на ZFS зеркале","Небольшая заметка, в дополнение к статье о корневом разделе на ZFS."
"2","Resolve IP адресов в Linux: понятное и детальное описание","Настройка сетевого взаимодействия сервисов не самая простая задача и часто осуществляется без глубокого понимания как требуется настраивать систему и какие настройки на что влияют. После миграции сервисов в docker контейнерах с centos 6 на centos 7 я столкнулся со странным поведением вебсервера: он пытался присоединиться к сервису по IPv6, а сервис же слушал только IPv4 адрес. Стандартный совет в такой ситуации — отключить поддержку IPv6. Но это не поможет в ряде случаев. Каких? В этой статье я задался целью собрать и детально объяснить как приложения resolve'ят адреса."
"2","VLC 3.0 Vetinari","Неплохо начался и продолжается год для Linux в качестве рабочей станции. Вслед за третьим Wine, настало очередь популярнейшего медиаплеера VLC. После длительного и напряженного цикла разработки VideoLAN анонсировала выпуск видеоплеера с открытым исходным кодом VLC 3.0.0 озаглавленного Vetinari. Новая версия доступна для платформ Linux, *BSD, Mac, IOS, Windows и Android. В новой версии появилось множество современных возможностей: поддержка iPhone X, звука 3D, HDR видео, а также проигрывание видео с оборотом 360 градусов.   Среди самых заметных новшеств следует назвать поддержу видео высокой четкости 4k / 8k, видео 10-бит, проброс HD аудио кодеков, меню BD-J BluRay Java, поддержка NAS устройств, Google Chromecast и FTP, SFTP, SMB подключений."
"2","Wireshark для просмотра трафика в реальном времени","Иногда мне необходимо было залезть на linux-сервера и иметь возможность просматривать текущий трафик в реальном времени. Как я делал до этого? На целевом сервере устанавливался tcpdump, выхлоп которого писался в файлик. Далее файл через scp тянулся на локальный компьютер под Windows и открывался в Wireshark.  В определенный момент мне захотелось более удобного решения и я, найдя возможность запустить Wireshark на винде (локально) в связке с tcpdump-ом на сервере (удаленно) на просторах интернета, и немного подпилив эту реализацию, решил поделиться с Вами."
"2","RFC для слабаков или история одного расследования","Преамбула: в один из дней мы решили подключить к нашему сайту CDN, для того, чтобы радовать пользователей более быстрой загрузкой страниц. После некоторых поисков выбор пал на Highwinds, т.к. они заявляли, что поддерживают весь нужный функционал и с ними удалось договориться на очень вкусную цену. После успешного перевода сайта на работу через Highwinds мы решили— а почему бы не переключить на них и наше REST API для мобильных приложений. И тут начались интересности."
"2","Установка Proxmox VE на Debian Stretch используя Ansible","Являясь большим фанатом данной системы виртуализации, решил поделиться несколько иным способом установки.  Если кратко, то Proxmox это система виртуализации на KVM, которая ещё умеет управляться с контейнерами LXC. Также имеется возможность кластеризации(для некоммерческой версии ограничение около 8 нод). Умеет работать с Ceph, ZFS. Если подробно, то советую почитать вики или посмотреть ютуб.  Варианты установки  Дело в том, что ProxmoxVE можно установить при помощи образа, который предоставляется на скачивание, но тогда вам вряд ли будут доступны варинты разбивки с использованием soft-raid для Linux и прочие извращения(если что-то некритичное по производительности — почему нет?). Отдельное спасибо товарищу @merlin_vrn за знакомство с Proxmox, и Alex Filimonov за помощь с Ansible.  Существует вариант, когда вы сами ставите Debian актуальной версии именно так как вы хотите, а уже дальше устанавливаете ProxmoxVE как некую надстройку, которая вам заменяет ядро, linux-firmware, lvm, устанавливает свой репозиторий и уже отчасти перестаёт быть Debian. В этом случае у вас гораздо больше пространства для свободы(к примеру, недавно я ставил по сети Debian через liveusb Archlinux используя debootstrap)."
"2","Встреча в Питере 16 ноября: Delivery-инфраструктура для компаний и отдельных проектов","Мы соберемся 16 ноября, чтобы поговорить о том, как построить DevOps инфраструктуру как для большой компании со сложным продуктом, частыми релизами, CI, так и отдельно взятого проекта, отдела в компании или даже небольшого стартапа, когда разворачивать большой стек инструментов долго и дорого. Посмотрим, по каким законам существует девопс-культура в больших enterprise-компаниях, и коснемся темы конкретных инструментов и решений. В частности, поговорим о лучших практиках работы с Ansible. Встреча будет полезна как опытным, так и начинающим DevOps-инженерам."
"2","Случайное удаление файлов рута","Вы спокойно блуждаете по директории \$HOME, думая о своих делах.  \$ whoami > user  \$ pwd > /home/user  Но что-то вас беспокоит. Это как маленький камушек (little rock), попавший в ботинок. Вы снимаете обувь, чтобы посмотреть, в чём дело.  \$ ls -lah ./left-shoe ---------- 1 root root 4 May 30 13:20 little-rock  Странно. Он здесь, но как будто не принадлежит вам. Его оставил root, Рок Теймер, и только он решает его судьбу."
"2","Настройка основного и двух резервных операторов на Linux-роутере с NetGWM","Задача резервирования основного шлюза — одна из самых популярных в сетевом администрировании. У нее есть целый ряд решений, которые реализуют механизмы приоритезации или балансировки исходящих каналов для абсолютного большинства современных маршрутизаторов, в том числе и маршрутизаторов на базе Linux.    В статье об отказоустойчивом роутере мы вскользь упоминали свой корпоративный стандарт для решения этой задачи — Open Source-продукт NetGWM — и обещали рассказать об этой утилите подробнее. Из этой статьи вы узнаете, как устроена утилита, какие «фишки» можно использовать в работе с ней и почему мы решили отказаться от использования альтернативных решений."
"2","Import() из webpack вскоре освоит JS+CSS, а вот как вы можете пользоваться этим уже сейчас","Полтора месяца назад создатель webpack Тобиас Копперс выпустил “Большой план” для CSS в Webpack в своей статье ""Новый рабочий процесс для CSS (шаг1)"".  Самый первый вывод, который можно сделать — заключался в том, что разделение кода CSS станет приоритетом первого класса. Вы сможете получить css-файлы, сгенерированные для каждого из ваших динамических фрагментов кода, а вызовы import() вернут вам 2 файла: JS + CSS."
"2","Наш рецепт отказоустойчивого Linux-роутера","В высоконагруженных проектах всегда повышенные требования к избыточности и надежности. Одним из важнейших звеньев инфраструктуры является маршрутизатор, потому что от его устойчивости зависит доступность сети в целом. Именно на таких узлах мы используем одну из схем реализации отказоустойчивого виртуального роутера на базе GNU/Linux с использованием iproute2, NetGWM, keepalived, ISC DHCPD, PowerDNS. Как мы всё это настраиваем, читайте в этой статье."
"2","Принт-сервер на RaspberryPI 1","Долго меня мучала идея из старенького RPI сделать принт-сервер (удаленная печать и сканирование) и наконец я до этого добрался.  Исходим из того, что у нас есть набор из RPI, флешки с Raspbian, Wi-Fi адаптера, принтера HP LaserJet Pro 1102, МФУ HP Deskjet F2180 и usb-хаба. Основная машина (ББ), которая будет использовать принт-сервер живет на Linux (впрочем, отличия в использовании для Windows будут минимальны)."
"3","TinyML — машинное обучение на микроконтроллерах","В настоящее время мы все, так или иначе, пользуемся последними достижениями в сфере так называемого «искусственного интеллекта», который на самом деле представляет собой зачастую просто интеллектуальные алгоритмы на базе нейросетей.  Тем не менее подобные интеллектуальные решения всё сильнее входят в жизнь и начинают захватывать всё новые и новые сферы.  Одним из достаточно жарких направлений в современной микроэлектронике и интеллектуальных системах является тема встраивания подобных алгоритмов в маленькие неэнергозатратные системы (потребление которых при работе этих алгоритмов измеряется милливаттами). Подобный подход называется TinyML — алгоритмы машинного обучения на микроконтроллерах. Об этом и поговорим в статье ниже."
"3","Практические применения генеративных моделей: как мы делали суммаризатор текстов","В последнее время вышло большое количество генеративных моделей для русского языка. Команды Сбера выпустили целое семейство авторегрессионных моделей ruGPT3, ruT5, о которых мы подробно писали ранее. Сегодня мы расскажем, как практически применять обучение таких моделей и какие продукты можно получить на их основе.  Мы выводим в открытый доступ два новых сервиса: Рерайтер и Суммаризатор. Модель «Рерайтер» способна переписать любой текст другими словами с сохранением смысла вне зависимости от длины и формата — от новостей и художественной литературы до постов в социальных сетях. Модель «Суммаризатор» позволяет создать сжатое изложение исходного текста, сохраняющее его главные тезисы. Эта модель может быть полезна для экономии времени читателя, а также выделения главных мыслей объёмных документов, научной или бизнес-литературы. В частности, использовать сервис можно для подготовки обзоров научных работ на заданную тему, создания новостных дайджестов, выделения наиболее важных событий в лентах информагентств для аналитики. "
"3","Разработка Gamio AI. Сквозь боль и баги","Gamio AI - текстовое приключение на русском языке, основанное на искусственном интеллекте. Как бы пафосно это не звучало, мне удалось создать рабочую версию этой амбициозной идеи."
"3","Как узнать принцессу среди 500 амурских тигров с помощью vision transformers","Рассказываем, как мы, ML princesses [Napoleon IT] стали победителями кейса от Минприроды «Защита редких животных», и решили задачу по созданию сервиса, способного распознавать в дикой природе особо редкий вид хищников- амурского тигра. Десятый региональный хакатон проходил в рамках федерального проекта «Искусственный интеллект»."
"3","Реальные примеры, как ИИ оптимизирует дизайн микросхем","Перегруженность интегральной схемы, где через отдельные участки проходит слишком много цепей (красным цветом)  Сегодня в РФ рассматриваются планы создать полноценную инфраструктуру для производства микросхем, организовать 300 дизайн-центров с штатом минимум по 100 профильных специалистов и запустить новые фабрики. В этой связи интересно посмотреть, какие методы ML используются в проектировании современной микроэлектроники. Что-то можно перенять для отечественных разработок."
"3","Автоматическая суммаризация текстов с помощью трансформеров Hugging Face. Часть 1","В июле 2020 года компания OpenAI выпустила свою модель машинного обучения третьего поколения, GPT-3, ориентированную на генерирование текстов. Тогда я понял, что мир уже не будет прежним. Эта модель задела меня за живое. Те системы такого рода, что выходили раньше, у меня подобных ощущений не вызывали. И вот ещё неожиданность — о новой системе начали говорить мои друзья и коллеги, в принципе интересующиеся технологиями, но не особенно обращающие внимание на последние достижения машинного обучения (Machine Learning, ML) и искусственного интеллекта (Artificial Intelligence, AI). Об этом написала даже газета Guardian. А если точнее — статью написала сама модель, а в Guardian её лишь отредактировали и опубликовали. Совершенно очевидно то, что выход модели GPT-3 стал поворотным моментом в развитии искусственного интеллекта.  Сразу же после выхода модели начали появляться идеи по поводу вариантов её применения. В течение нескольких недель было создано множество впечатляющих демонстрационных проектов, которые можно найти на сайте GPT-3. Моё внимание привлёк один из способов применения GPT-3 — автоматическое реферирование текстов (text summarization): компьютер читает переданный ему текст и выдаёт краткое изложение этого текста. Это — одна из самых сложных задач, с которыми приходится сталкиваться компьютерам. Дело в том, что она совмещает в себе два навыка из сферы обработки естественных языков (Natural Language Processing, NLP). Это — понимание читаемых текстов и возможность писать тексты самостоятельно. Именно поэтому меня так впечатлили примеры использования GPT-3, демонстрирующие возможности системы по генерированию текстов."
"3","OCR за час? — Не думаю","Одним прекрасным вечером коллега попросил подумать над алгоритмом поворота серийных номеров на металлических брусках. Но глобально задача предполагала именно распознавание номеров. Казалось бы, современные коробочные решения должны легко решить нашу задачу. О том, что было на самом деле, и пойдет речь в этой статье."
"3","Как искусственный интеллект PROMETHEUS захватил мир (Современная сказка)","Я хочу рассказать вам историю команды Омега. Я собираюсь рассказать о некоторых событиях, которые, вероятно, произойдут в недалеком будущем. Команда Омега состоит из талантливых людей. Эти люди были выбраны харизматичным генеральным директором компании после того, как они по очереди прошли собеседование. Идеалистическая группа исследователей, инженеров и разработчиков программного обеспечения, которые являются лучшими в своих областях. Их целью было помочь человечеству. Но их миссия была слишком опасной. Если код, который они разрабатывали, попадет в руки не тех людей, это может привести к очень плохим результатам. Так в свое время объединились самые умные умы мира для «Манхэттенского проекта». Но что же все-таки произошло? Появилось ядерное оружие, и в мировых войнах человечество было практически уничтожено. Они назвали искусственный интеллект «Прометеем». Он отличался от примеров «узкого искусственного интеллекта», которые до этого разрабатывали другие технологические компании. Команда Omega разрабатывала Prometheus как «общий искусственный интеллект». Возможно, ему не хватало социальных навыков, которые сейчас есть у людей, но они работали, чтобы быть лучшим в чем-то. У Прометея была возможность программировать другие системы ИИ. Они хотели, чтобы это было похоже на машину, которая может проектировать машину. Если бы он мог развить лучший интеллект, чем он сам, он мог бы научиться другим вещам, которые ему понадобятся со временем, используя этот интеллект.  В 09:00 пятничного утра команда Omega решила запустить написанный ими код, а именно «Прометей», и нажала кнопку. Прометей начал работать на компьютере в хорошо проветриваемом закрытом помещении. Они не подключали его к Интернету из соображений безопасности. Но они разместили копии некоторых сайтов в Интернете на жестких дисках рядом с собой. Википедия, несколько каналов с YouTube, несколько страниц из Twitter и Facebook… Он использовал эту информацию для самообразования. Такого рода выборочные данные были необходимы для метода машинного обучения, который другие компании используют уже много лет. "
"3","Хотите усовершенствовать цикл обработки данных? Попробуйте задействовать людей","Поговорим о том, как готовить данные и обучать алгоритмы, чтобы находить совпадения среди миллионов товаров (а на AliExpress их больше 2 млрд), причем разберем не только истории успешного успеха, но и попытки, которые ни к чему не привели — на первом митапе команды AliTech 7 апреля, в 18:00. В программе:"
"3","Путеводитель по основным трендам 2021 года в области обработки естественного языка и не только","Когда-то давно люди много путешествовали, посещали новые города и страны, им удавалось насладиться культурой других народов, пообщаться с ними на языке жестов. Исследовать новый для себя город можно по-разному. Например, бесцельно гулять по его улицам, впитывая атмосферу, состоящую из множества разных мелочей. И это отличный способ, если времени на осмотр много и точно знаешь, что рано или поздно еще вернешься. В противном случае полезно оптимизировать визит, используя путеводители, карты достопримечательностей и статьи других путешественников.  Число исследований в области машинного обучения с каждым годом растет. Конечно, приятно было бы прогуляться по каждой статье или ветке исследований отдельно, но времени на это просто может не хватить, а «посетить» 2021 год еще раз, увы, не удастся. Следовательно, необходимо также искать «путеводители» - статьи, подсвечивающие некоторые тренды, понимание которых важно для будущих направлений исследований. В начале года одна из таких статей «гуляла»  по различным каналам и чатам. Мне захотелось перевести ее на русский и поделиться с вами. Далее приведу перевод этой статьи с моими комментариями."
"3","Доверять Джини или нет: вот в чем вопрос","Коэффициент Джини (или индекс Джини), кривая Лоренца, TPR (true positive rate) и FPR (false positive rate) – одни из самых популярных атрибутов экономических задач, решаемых с помощью машинного обучения. Все они используются для оценки качества модели и, так или иначе, связаны друг с другом. Предлагаю вспомнить, как они рассчитываются."
"3","Школа аналитиков данных","X5 Tech приглашает студентов и выпускников вузов пройти бесплатное обучение по профессии Data Analyst. Уже через три месяца обучения можно будет пройти оплачиваемую стажировку в Х5 Group."
"3","gamio. Русскоязычное текстовое приключение с GPT2","Моя попытка создать аналог aidungeon, novelai, holo AI для русского языка. Хоть я и пытался сделать всё с абсолютного нуля, получилось не плохо. В данном посте я затрону технические проблемы и расскажу про самые ранние попытки создать gamio.ru"
"3","Граф знаний LinkedIn’s Economic Graph и его Star2Vec-эмбеддинги","В этой публикации я представляю поверхностный обзор статьи от исследователей LinkedIn «Representation Learning in Heterogeneous Professional Social Networks with Ambiguous Social Connections». В указанной статье частично представлена структура графа знаний LinkedIn’s Economic Graph и относительно подробно описан метод обучения эмбеддингов Star2Vec. Я попытаюсь объяснить основные этапы построения векторных представлений, что называется ""на пальцах"". Т. к. это лишь поверхностный обзор, от читателя требуются следующие познания: 1. Skip-gram и его адаптация под графы (word2veс, LINE, DeepWalk); 2. общие понятия о графах знаний."
"3","Как мы преуспели на международном конкурсе по выращиванию цифрового салата","Настоящее всё больше походит на то, что некогда представлялось фантастикой. Меня зовут Павел Дудукин, руководитель Data Science-направления в Центре развития финансовых технологий (ЦРФТ) Россельхозбанка, и в этой статье расскажу, как мы вышли в финал международного конкурса Autonomous Greenhouse Challenge и что нас ждет дальше.  Объединённая команда Россельхозбанка (РСХБ) и Московского физико-технического института (МФТИ) приняла участие в хакатоне Autonomous Greenhouse Challenge в 2021 году. Там собрался народ, заинтересованный в автоматизации тепличного выращивания сельхозкультур. Наша команда заняла второе место, уступив лишь объединённой команде университетов из Китая. Мы опередили участников из Стэнфордского университета, MIT, международного концерна BASF, Технического университета Мюнхена и др. Интересно, что смогла придумать наша команда? Тогда добро пожаловать в нашу теплицу."
"3","Градиентный бустинг с CATBOOST (часть 3/3)","В предыдущих частях мы рассматривали задачу бинарной классификации. Если классов более чем два, то используется MultiClassification, параметру loss_function будет присвоено значение MultiClass. Мы можем запустить обучение на нашем наборе данных, но мы получим те же самые результаты, а обучение будет идти несколько дольше:"
"3","Автоматизация бизнеса с помощью AI: разбираем по шагам","В этой статье мы расскажем, как промышленный интернет вещей и искусственный интеллект (Industrial IoT + AI) позволяют автоматизировать традиционный бизнес — торговлю, сельское хозяйство, деревообработку, логистику, строительство, производство и другие предприятия, которые обычно не связаны с приставкой tech. Рассмотрим такие проекты изнутри, чтобы показать, какие проблемы они решают и каких результатов позволяют добиться. "
"3","Градиенты в нейронных сетях для поиска аномалий в данных","В основе машинного обучения лежит предположение, что данные для обучения, тестирования и применения взяты из одного и того же распределения. К сожалению, в процессе применения модели это предположение может нарушаться, что приводит к необъяснимым последствиям — сдвигу распределения. Особенно такие нарушения опасны в областях, где требуется быстро и точно принимать решения: медицина, финансы, self-driving cars.  Системы машинного обучения часто просто игнорируют сдвиги распределения и продолжают работать в штатном режиме, не представляя, что ответы на запросы могут быть невалидными. Чтобы сделать работу системы более точной и понять причину происхождения некорректных данных, можно отлавливать такие нарушения — нужно только добавить возможность поиска аномалий.  Меня зовут Глеб Енгалыч, я аспирант Питерской Вышки первого года обучения. В этом посте я расскажу о своей магистерской диссертации «Анализ градиента нейронной сети для поиска аномалий в данных», которую сейчас активно дорабатываю для подачи на конференцию ICML-2022."
"3","Как с помощью суперпикселей улучшить аннотацию данных","К старту флагманского курса по Data Science рассказываем о суперпикселях, которые улучшают сегментацию данных, и знакомим читателей с платформой Kili Technologies, в инструментах которой они реализованы. Под катом подробности и ссылка на код быстрой реализации алгоритма сегментации SLIC."
"3","Теорема Байеса: просто о сложном","В этой статье мы рассказываем об основах и применении одного из самых мощных законов статистики - теоремы Байеса.  Мы продемонстрируем применение правила Байеса на очень простом, но практичном примере тестирования на наркотики и реализуем расчеты на языке програмирования Python. Мы также проиллюстрируем, как ограничения теста влияют на прогнозируемую вероятность и что в тесте необходимо улучшить, чтобы получить результат с высокой степенью достоверности. Мы также покажем истинную силу байесовских рассуждений и как несколько байесовских вычислений можно объединить в цепочку, чтобы вычислить общую апостериорную вероятность."
"3","Автоматическая генерация протоколов совещаний","Искусственный интеллект и связанные с ним технологии плотно вошли в нашу жизнь: с его помощью музыкальные сервисы рекомендуют нам музыку, черно-белые фильмы становятся цветными, а на просторах интернета появляются deepfake-ролики и другой контент. И это только то, что, как говорится, лежит на поверхности. Вариантов использования ИИ для помощи человеку намного больше.  Если в сфере B2C искусственный интеллект уже давно и прочно занял свои позиции, то в последнее десятилетие он стал активно использоваться и в B2B-сегменте. Например, там ИИ всё чаще помогает оценивать контрагентов и риски или определяет вероятность увольнения сотрудника или ухода клиента. Искусственный интеллект можно и нужно использовать, когда приходится иметь дело с высокой долей неопределенности, высокой вариативностью и неструктурированностью данных. Главным барьером тут оказывается отсутствие понимания с чего именно начинать, что делать, и где взять специалистов для решения конкретных задач. В этом посте рассказываем, как мы упрощаем использование ML с роботами, и как можно самостоятельно обучать модели и использовать их для автоматизации процессов. И всё это без специалистов по машинному обучению. Статья написана при поддержке Кристины Виролайнен, технического эксперта компании UiPath."
"3","ModelOps на практике: переходим от отверточной сборки к конвейеру по управлению моделями","Привет хабр! Меня зовут Артем Глазков, я работаю консультантом в российском подразделении компании SAS. Сегодня я хочу рассказать про операционализацию аналитики на практическом примере проекта, который я сделал совместно с моим коллегой Иваном Нардини для крупной итальянской сырьевой компании. Я постараюсь сфокусироваться на наиболее важных деталях и преимуществах подхода ModelOps.  Согласно независимым исследованиям, операционализация аналитики является ключевым трендом развития в области Искусственного Интеллекта. Необходимо научиться не только строить точные модели машинного обучения, но и организовать эффективное управление их жизненным циклом. Без этого модель рискует навсегда застрять внутри стен ‘лаборатории данных’. Практика показывает, что именно там остаются более половины разработанных моделей. Это означает, что время и усилия, затраченные на создание таких моделей, так и не были компенсированы полезным эффектом от их применения.  После внедрения задача инструментов управления жизненным циклом моделей заключается в том, чтобы постоянно поддерживать модель в форме. Мир вокруг модели меняется — в отсутствие настроенного процесса контроля качества работы модели рано или поздно точность ее работы упадет ниже приемлемого значения. Инструменты мониторинга моделей позволяют своевременно выявить потребность в дообучении. Обновленная модель сможет увидеть новые закономерности в данных и правильно их учесть. В результате, удастся обеспечить стабильно высокое качество работы модели на этапе эксплуатации, а значит получить больше практической пользы от каждой разработки."
"3","GoEmotions — набор данных для детализированной классификации эмоций","Эмоции являются ключевым аспектом социальных взаимодействий, который влияет на поведение людей и формирует межличностные отношения. Это особенно характерно для языка: всего несколькими словами мы можем выразить большое количество очень тонких и сложных эмоций. Вот почему на протяжении долгого времени в научном сообществе стоит цель научить машины понимать контекст и эмоции, что, в свою очередь, позволит создавать множество приложений, таких как чат-боты, обладающие эмпатией, модели определения токсичного поведения в интернете и улучшенные системы поддержки клиентов.  В последнее десятилетие сообщество NLP-исследователей сделало доступным несколько наборов данных для классификации эмоций на основе языковых данных. Большая часть из них были созданы вручную и включают в себя тексты определенной предметной области (например, новостные заголовки, субтитры фильмов и даже сказки), однако в основном имеют достаточно скромный размер или сосредоточены всего на 6 базовых эмоциях (гнев, удивление, отвращение, радость, страх и печаль), предложенных в 1992 году. Хотя эти наборы данных позволили начать первые исследования в области классификации эмоций, они также подсветили необходимость создания более объемного набора данных, содержащего более детализированный перечень эмоций, которые можно было бы применить в более широком кругу потенциальных приложений."
"3","Рождение Albumentations","В этом посте я расскажу историю появления Open Source библиотеки Albumentations как я ее запомнил. Я не буду углубляться в технические детали. Основная задача текста - логирование, то есть надо написать историю, которую мне будет интересно прочитать через 20 лет.  История будет затянутая, с лишними подробностями, более того - основная часть будет о том, как все начиналось, а уже процесс итеративных улучшений будет покрыт меньше."
"3","Искусственный Интеллект призван спасать жизни","Зима 2020 года, темная ночь. Мой друг ехал домой после тяжелого рабочего дня. Он прикрыл глаза на пару секунд, и проснулся от ужасной боли — его рука была сломана, а голова истекала кровью. Он больше не вел машину, потому что она разбилась где-то на обочине. Это была автокатастрофа — он просто уснул за рулем. Благодаря подушкам безопасности и ремню мой друг выжил, но ДТП повлекло за собой 6 месяцев реабилитации, огромный стресс для него, его семьи и друзей, тысячи долларов на ремонт автомобиля и множество сорванных сделок на работе. Это был тот случай, когда всего несколько секунд оказали огромное влияние на жизнь человека. Обо мне. В то время я работал над рядом проектов в области автомобильных автопилотов для известных производителей автомобилей. На основе искусственного интеллекта и компьютерного зрения мы создавали функциональные возможности для безопасности водителей, которые могли бы предсказывать некоторые опасные действия на дороге. Все эти изобретения были предназначены для новейших дорогих автомобилей, поэтому для обычных граждан получить достаточную безопасность на дороге — пока что далекое будущее. Меня это выбивало из колеи и я долго думал над тем, как это можно изменить. Автопилот. Немного об автопилоте и его классификации. Организация SAE International установила шесть уровней автономного вождения: Уровень 0. ADAS (Усовершенствованная система помощи водителю) не может управлять автомобилем и может только предоставлять информацию. Водитель получает уведомления и предупреждения во время поездки и должен все делать сам."
"3","Как улучшить ключевые метрики банка за счет кассовых чеков ОФД?","Плох тот дата сайентист, который не представляет, как будут использоваться его модели в конечных продуктах, как они помогут бизнесу увеличить чистую прибыль, улучшить клиентский опыт или любой другой ключевой показатель в компании. Часто задачи приходят от продуктовых подразделений, но в случае, когда главным компонентом продукта является модель машинного обучения, без экспертного взгляда специалиста не обойтись. В этой статье рассмотрим, как можно принести пользу компании за счет данных кассовых чеков ОФД."
"3","Как устроена платформа DS Works для чемпионатов по data science — что она предлагает бизнесу и участникам","Платформа DS Works позволяет проводить чемпионаты по обработке и анализу данных. По итогам соревнований организации получают готовое к внедрению решение, а участники — денежные призы и приглашения на работу. Это интервью с Сергеем Кузнецовым, product owner’ом платформы. Он рассказывает о ходе развития проекта и ближайших соревнованиях."
"3","WEKA. Руководство по использованию","Начав изучать библиотеку Weka я обнаружила, что в Интернете очень мало информации о ней на русском языке – как с ней работать и как ее использовать. Эта статья будет вводной для знакомства с библиотекой."
"3","Как мы узнали, что одна из бригад оцинковщиков работала быстрее других и что было дальше","Практически всё, что вы видите на фото ниже — агрегат, где происходит горячее цинкование металлопроката. Полоса металла шириной от 0,9 до 1,8 м и длиной до 6,5 км проходит термическую обработку, погружается в ванну с цинковым расплавом и едет дальше по многоступенчатому технологическому процессу. Далее полоса охлаждается, режется и сматывается в рулоны.   Это агрегат непрерывного горячего цинкования (АНГЦ-1 в Липецке). Его размеры могут впечатлить: длина 255,8 метров – это больше чем два футбольный поля, а ширина 21 метр, по вертикали от нижней отметки (-7,0 м) до верхней отметки (+28.5 м).  Агрегат функционирует 24/7 круглый год. Если упрощенно, этот монстр включает в себя печь отжига, ванну цинкования и башню охлаждения.  Чтобы цинковое покрытие было качественным нужно учесть более 100 параметров, при том все они разные для каждого класса стали.  На АНГЦ работают 4 бригады. Однажды при анализе данных, мы увидели, что производительность одной из них была немного (совсем чуть-чуть) выше, чем у трёх других.  Очевидно, что разница в производительности зависит от скорости прохождения полосы (хорошо бы побыстрее). При этом качество продукции, помимо прочего, также зависит от скорости (поспешишь, людей насмешишь). Тут нужен тонкий баланс.  У бригад подход к выбору температурно-скоростных режимов индивидуально разный. Это примерно, как манера вождения автомобиля – кто-то гонит в левой, а кто-то за троллейбусом (утрирую, конечно). Поэтому мы сделали цифровой советчик, чтобы подтянуть и выровнять всех."
"3","Как алгоритмы распознавания лиц помогут в лечении сотен заболеваний","Вычислительный биолог Анна Карпентер разработала первый алгоритм профилирования клеток на основе полученных с микроскопа изображений. Сегодня такие алгоритмы, в основе которых лежит технология распознавания лиц для социальных сетей, помогают медикам быстро классифицировать тысячи клеток. Под катом к старту курса по ML и DL делимся интервью Анны Карпентер для Quanta Magazine, где она рассказывает о возникновении первого алгоритма профилирования и рассказывает о большом эксперименте с сотнями типов клеток."
"3","Байесовская Сеть Доверия Применительно IoT","Привет, Хабр. В предыдущей статье рассматривали методы и алгоритмы Обнаружения и Диагностики Неисправностей (ОДН) IoT устройств. Как логическое продолжение рассмотрим Байесовскую Сеть Доверия (БСД) для IoT устройств целю ОДН. Байесовская сеть доверия (англ. Bayesian Belief Network, BBN) — это вероятностная модель, представляющая собой множество переменных и их вероятностных зависимостей. БСД используются для моделирования предметных областей, которые характеризуются неопределенностью. Эта неопределенность может быть обусловлена недостаточным пониманием предметной области, неполным знанием ее состояния в момент принятия решения, случайным характером механизмов, определяющих поведение этой области, или комбинацией этих факторов. Например, БСД может быть использована для вычисления вероятности того, в чем причина не исправности устройства основываясь на данных по полученных из датчиков и поведением устройства в целом. Таким образом строиться зависимости между сигналами и неисправности устройства."
"3","Семантика и технология Word2Vec","Сегодня поговорим о NLP-методах векторизации слов - Word Embeddings. Векторы слов лежат в основе многих систем обработки естественного языка и повсеместно используются в современном мире. Рассмотрим работу Word Embeddings на примере нейронной сети Word2Vec. В более общем смысле Word2Vec удобен для работы с категориальными признаками. Когда мы говорим о смыслах или о лингвистике, мы имеем дело с сотнями тысяч слов-смыслов. И вот, собственно, Word2Vec и есть та самая современная технология, которая позволяет работать с такими категориальными признаками. Для демонстрации возможностей технологии Word2Vec введем некую обучающую последовательность данных. Эта последовательность будет в виде расстояния на иерархии isa."
"3","Препарирование нейронок, или TSNE и кластеризация на терабайтах данных","У вас продакшн нейронные сети, терабайты данных? Вам хочется понять, как работает нейронная сеть, но на таком объеме это сложно сделать? Сложно, но можно. Мы в NtechLab находимся именно в той ситуации, когда данных так много, что привычные инструменты интроспекции нейронных сетей становятся не информативны или вовсе не запускаются. У нас нет привычной разметки для обучения атрибутов. Но нам удалось вытащить из нейронной сети достаточно, чтобы классифицировать все имеющиеся данные на понятные человеку и учтенные нейронной сетью атрибуты. В этом посте мы расскажем, как это сделать."
"3","ML-модели в BI: интеграция с Python через JupyterHub","Привет, Хабр! Мы продолжаем рассматривать конкретный практический вопрос — интеграцию Python для внедрения ML-моделей и расширенной аналитики в BI. В прошлом посте мы уже рассуждали о том, зачем это нужно, и как можно реализовать подобное расширение. Сегодня же мы остановимся на том, как реализована поддержка Python в популярных BI-системах. И сразу спойлер: в существующих системах (в том числе в Visiology) это было сделано неудобно, и чтобы решить эту проблему, мы придумали новую штуку, а именно — интеграцию с JupyterHub. Под катом — подробный рассказ о том, какие мы знаем подходы к работе с Python, и что меняется в этом процессе при подключении Jupyter Hub. Если вы еще не пробовали эту схему, то скорее давайте читать наш пост, а если уже работали таким образом — давайте обсуждать новый подход в комментариях."
"3","Самостоятельная разметка данных для распознавания русского рукописного текста","В данной статье я опишу наш опыт создания датасета для обучения модели распознавания рукописного текста.  Предварительный анализ работ по этой теме показал, что в публичном доступе отсутствуют размеченные наборы данных на русском языке. Доступные данные либо описывают английский текст, либо не доступны для коммерческого использования. Нам не подходило такое условие, поэтому единственным вариантом стало создание собственных данных. Общий принцип был заимствован у коллег из Казахстана – создание и заполнение табличных форм с двумя колонками на странице – печатной и рукописной, а затем разбивка скана либо фотографии страницы на мини-боксы с текстом. Мы начали с выбора текстов. Чтобы модель показывала хорошие результаты на инференсе, она должна иметь высокую обобщающую способность. Для этого она должна «увидеть» в процессе обучения как множество образцов почерка, так и разнообразие текстов. Мы взяли текст из нескольких источников, в числе которых бульварный роман, газетные публикации, научная работа и ряд других. Ниже приведена функция, которая формирует набор предложений из файла-источника, для чего выбирает по 3 слова в случайном месте текста. Ограничения на длину установлены, чтобы избежать слишком коротких или слишком длинных фраз."
"3","Влияние загрязнения воздуха на тяжесть течения Covid- 19","Продолжаю цикл статей основанных на анализе базы московских больных. В настоящей второй части я буду анализировать влияние загрязнение воздуха на тяжесть течения заболевания. В этом нам поможет сайт с открытыми данными г. Москвы, на котором представлена информация метеорологических станций."
"3","Мегаанализ распространения Covid-19 в Москве","В этой части целого цикла статей я представлю только статистические данные. В последующих главах будет выполнено предсказание тяжести заболевания, влияния загрязнения воздуха и даже сделано фундаментальное открытие, обобщающее закон Гомперца на различные тяжести течения Covid- 19."
"3","Кластеризация в ценообразовании: основные принципы","Машинное обучение – необходимый элемент всех современных систем ценообразования. Мы используем его на всех этапах формирования цены – от выявления товаров KVI до переоценки уже установленных цен. В материале расскажу о том, как использовать МО для работы по кластеризации магазинов и тестирования гипотез."
"3","[Антикейс] Прогнозирование и планирование потребления электроэнергии с помощью machine learning (эксперимент)","Большинство статей на Хабре на тему ML прогноза - про применяемые алгоритмы, подходы, инструментарий, но без фокуса на практическое решение задач. Мы решили поделиться своим опытом и результатами применения машинного обучения для прикладной задачи крупных промышленных предприятий, которые последние 15-20 лет прогнозируют электропотребление «ручным» способом. На Хабре есть близкая к этой теме публикация-перевод, но она как раз технически-обучающая и без результатов практического применения. Энергоёмкие промышленные компании являются крупными потребителями электроэнергии и обязаны каждый день подавать заявки с информацией, сколько они планируют закупить электроэнергии в ближайшие сутки в разбивке по часам. Отклонения фактического потребления от прогнозной заявки и в большую, и в меньшую сторону оплачиваются по отдельной ставке. Чем точнее их прогноз, тем меньше оплата. Очевидный прямой эффект от повышения точности почасового прогнозирования дал старт нашей исследовательской работе. Всё просто: повышаем точность прогноза на n% → заказчик получает меньший счёт от сбытовой компании или рынка → мы «в одну строчку» защищаем бюджет на такие системы. Однако, на то это и эксперимент, чтобы получить реальный, а не теоретический ответ на вопросы: где можно повысить точность и сложно ли это сделать? 1-2-3% - это сколько в рублях?"
"3","Вебинар «Deploying deep learning models with Kubernetes and Kubeflow»","Команда Data Phoenix Events приглашает всех завтра, 8 сентября в 17:00, на третий вебинар из серии ""The A-Z of Data"", который будет посвящен деплою deep learning моделей при помощи Kubernetes и Kubeflow."
"3","Эксперименты в Ситимобил. Эпизод 2: Атака тестов на Switchback","Всем привет! На линию выходит команда динамического ценообразования Маркетплейса СитиМобил. В прошлый раз мы начали вести длинный рассказ о том, как правильно проводить эксперименты в многосторонних маркетплейсах. Мы рассуждали о смысле происходящего; о предпосылках, почему вообще стоит задуматься над этой темой, и почему эксперименты не классическими рандомизированными подходами едины. Сегодня мы расскажем о практических шагах и ответим на главные, волнующие всех экспериментаторов вопросы: какими статистическими методами можно проверить switchback-тест и как выбрать подходящий."
"3","DeDLOC: обучаем большие нейросети всем миром","Как показывает опыт последних лет, самые интересные результаты в deep learning получаются при использовании больших нейросетей, обученных на массивах неразмеченных данных. Правда, для создания этих моделей нужен суперкомпьютер с десятками или сотнями мощных видеокарт, а также быстрым соединением между серверами. Но что делать, если таких ресурсов нет, а в открытом доступе хорошей модели под вашу задачу не нашлось?  Сегодня я расскажу про технологию, которая позволяет учить нейросети, объединяя через интернет вычислительные мощности энтузиастов из любой точки мира. В её основе лежит совместная научная работа Yandex Research, Hugging Face, студентов ШАД, ВШЭ и МФТИ, а также профессора Университета Торонто. Технология уже получила боевое крещение в ходе реального эксперимента, подробно описанного ниже. В конце статьи вы узнаете, как поставить такой эксперимент самостоятельно — модель и код доступны всем желающим.  Претрейн для всех, и пусть никто не уйдёт обиженным  За последние несколько лет во многих областях deep learning (например, в обработке естественного языка) стала популярной идея self-supervised learning. Оказалось, что для получения полезных в целевой задаче представлений не нужна большая размеченная выборка. Достаточно обучить модель на какой-то простой сигнал, построенный из неразмеченных данных, которых чаще всего в достатке. В частности, известные многим архитектуры BERT, GPT и языковая модель YaLM обучаются именно так."
"3","NLP At Scale: вся правда о предобученных моделях в Почте Mail.ru (часть 1)","Антиспам Почты Mail.ru — это симбиоз продуктовой логики и инфраструктурных технологий, про который мы решили более подробно рассказать. В основе конечно же лежит инфраструктура, с помощью которой мы получаем возможности для развития моделей машинного обучения, а также платформа ядра, которая обеспечивает работу антиспама в онлайне. Продуктовая логика представлена в виде большого количества эвристик (куда без них) и ручных правил. На вершине продуктовой пирамиды пребывает стек моделей машинного обучения, хотя положение на вершине в данном случае достаточно условно.  В этой статье мы заберемся на эту вершину, где в последнее время часто вбивают новые колышки текстовые модели. Мы спроецируем мир текстовых ML-моделей на наш сервис, поговорим про эволюцию и решение задач Почты, связанных с текстами. Запасайтесь кислородом и свободным временем."
"3","Как организовать разметку данных для машинного обучения: методики и инструменты","Если бы у data science существовал собственный зал славы, отдельную его часть нужно было бы посвятить разметке. Памятник отвечающим за разметку выглядел бы как атлант, держащий огромный камень, символизирующий их тяжелый и скрупулезный труд. Собственной стелы заслужила бы и база данных изображений ImageNet. За девять лет её контрибьюторы вручную разметили более 14 миллионов изображений. Даже представлять этот труд утомительно.  Хотя разметка и не является особо интеллектуальным трудом, она всё равно остаётся серьёзной проблемой. Разметка — неотъемлемый этап предварительной обработки данных для контролируемого обучения. Для этого стиля обучения моделей используются исторические данных с заранее заданными целевыми атрибутами (значениями). Алгоритм может находить целевые атрибуты, только если их указал человек.  Занимающиеся разметкой люди должны быть чрезвычайно внимательны, поскольку каждая ошибка или неточность отрицательно влияет на качество датасета и на общую производительность прогнозирующей модели.  Как получить высококачественный размеченный набор данных и не поседеть в процессе работы? Главной трудностью являются выбор ответственных за разметку, оценка необходимого для неё времени и подбор наиболее подходящих инструментов."
"3","Обзор методов чистки данных","Приветствую! Меня зовут Игорь Буянов, я NLP-разработчик в команде MTS AI. В рамках рабочих проектов группы обработки естественного языка я провожу исследования в области активного обучения, редукции шума и, в целом, занимаюсь подготовкой и обработкой датасетов. В этой статье будут рассмотрены методы чистки данных – noise reduction – и результаты тестирования алгоритмов. Чистка данных – значение и применение Чистка данных – это процесс удаления шума из датасетов, который появляется в результате неправильно размеченных примеров. Источники такого шума могут быть разными: случайные ошибки аннотатора – человека или машины, которые размечают данные в соответствии с задачей, – неслучайные ошибки из-за плохого понимания задачи или двусмысленного примера, ошибки автоматической разметки.  Несмотря на то, что существует много способов разметки и контроля качества данных, подобный шум всегда будет присутствовать в датасетах. В задачах классификации одна из причин шума – невозможность однозначно провести границу между классами. Для большинства современных моделей наличие шума в данных объемом до 10% – несерьезная проблема. Поэтому, если датасет создан грамотно или найденный набор данных надежен, результат будет удовлетворительным.  Но что делать, если нужно решить специфическую задачу, для которой доступен только один датасет сомнительного качества? Или вам недоступны средства для качественной разметки, вы вынуждены размечать данные вручную и хотите проверить себя? На помощь придут алгоритмы чистки данных."
"3","Нейродайджест: главное из области машинного обучения за июль 2021","Новый язык программирования от Open AI, рост популярности диффузионных моделей, чат-бот с памятью не как у золотой рыбки — об этом и многом другом в июльском выпуске."
"3","Топ-5 инструментов для разметки данных в 2021 году","Программы для разметки данных (data labeling) необходимы для прокачки машинного обучения и создания обучающих наборов данных. Поэтому мы решили изучить наилучшие решения из этой области, имеющиеся сегодня на рынке."
"3","Классификатор обращений пользователей (1C + python)","1. Описание задачи В нашей компании очень много пользователей и каждый день они шлют массу обращений на самые разные темы. У нас есть два отдела: ""Программные разработки"" и ""Системные администраторы"", и что бы облегчить жизнь техподдержке, был написан классификатор, который стыкует обращение пользователя на тот или другой отдел. В основе классификатора лежит логистическая регрессия."
"3","Brax — физический движок на GPU, заменяющий кластер CPU","В обучении с подкреплением (Reinforcement Learning) одним из ограничивающих факторов является быстродействие физических симуляторов, на основе которых происходит обучение нейросети. Из-за специфики расчетов, лишь малую часть из них можно вынести в GPU, а большая часть вычислений в физических движках делается на CPU. Для примера, один GPU может обучать нейросеть десятками тысяч параллельных ""потоков"" в секунду. Но один CPU с запущенным на нем физическим симулятором, может выдавать лишь 60-200 кадров в секунду. Для борьбы с этим ограничением, обычно запускается большой кластер из сотен или тысяч CPU с запущенными на них параллельными физическими симуляторами. А результаты их расчета передаются в единственную GPU, обучающую нейросеть. Исследователи из Google AI разработали новый физический движок Brax, который эффективно работает на одном GPU и способен выдавать до 10 миллионов шагов симуляции в секунду, выполняя при этом до 10 тысяч запущенных параллельных симуляторов физики. Это позволяет эффективно обучать нейросети на одном или нескольких локальных GPU, что раньше требовало внешнего сетевого кластера из десятков тысяч CPU."
"3","Есть ли ML после обучения нейронной сети?","Всем привет! Сегодня я хочу рассказать про мета-модели в медицине. Обязательно читайте до конца, вас ждёт сюрприз! Под мета-моделями в машинном обучении обычно понимают модели, которые в качестве входных данных используют предсказания других алгоритмов. Мета-модель обучается комбинировать эти предсказания оптимальным образом в зависимости от задачи и характеристик конкретной единицы данных. Вообще существуют как простые примеры объединения предсказаний (голосование моделей), так и более хитрые – например, стекинг, в котором мета-модель может быть алгоритмом любой сложности – от логистической регрессии до глубокой нейронной сети. На тему ансамблирования моделей уже написано немало статей и постов, поэтому здесь я хочу рассказать о паре интересных случаев использования мета-моделей для медицинских данных."
"3","БСД для финансистов – хорошо, но Диаграммы влияния – лучше","Разбирая примеры с использованием Байесовских сетей доверия (БСД), мы показали, как с их помощью формируется или принимается некое решение инвестора. Однако в чистом виде БСД могут быть лишь основой для принятия решений. Инструментом же, созданным специально для этого являются Диаграммы влияния (Influence Diagrams). Так называют разновидность байесовских сетей, в которой, помимо уже знакомых нам узлов неопределенностей (случайных переменных) используют еще два вида узлов: - узлы решений, которые должны быть приняты; - узлы полезностей, представляющие возможные значения (ценность, полезность) результатов. Диаграммы влияния, в отличие от обычных БСД, позволяют определять ожидаемую полезность всех альтернативных решений, а затем выбирать альтернативу с наибольшей ожидаемой полезностью. Программа Netica, которую мы использовали в предыдущих примерах, полностью приспособлена для постройки диаграмм влияния."
"3","Нейродайджест: главное из области машинного обучения за июнь 2021","Начнем подборку с новостей из области NLP. Языковых моделей становится все больше, некоторые из них уже активно используются в продакшне, про других пока есть только громкие пресс-релизы. Коротко пройдемся по самым важным новостям.   Как вы помните, в прошлом году Microsoft получила уникальные права на использование GPT-3. И вот за прошлый месяц на базе языковой модели от Open AI были представлены два продукта."
"3","Сервис распознавания капч, который больше не нужен","Nvidia DeepStream - широко известный в узких кругах инструмент для инференса на нейронных сетях и другой высокопроизводительной обработки видео-потоков в реальном времени на оборудовании от Nvidia. Наша команда занимается разработкой и оптимизацией пайплайнов видео аналитики для работы на базе DeepStream. В текущем проекте мы обнаружили, что некоторые пайплайны виснут. В ходе расследования мы обнаружили вектор атаки, который позволяет сформировать специальный фрейм в H264, вызывающий зависание DeepStream."
"3","ABBYY NeoML 2.0: Python и многое другое","Прошел почти год с тех пор, как мы опубликовали на GitHub библиотеку для машинного обучения NeoML. О чем, конечно же, была статья на Хабре. Мы обещали поддерживать и развивать ее. Свое обещание мы сдержали, и на днях свет увидела вторая версия библиотеки!  С первой версии в жизни проекта произошло много интересного: мы продолжили разработку на GitHub, освоили Azure DevOps для регулярных сборок, поддержали новые платформы, добавили немало новых и не столь новых, но очень нужных алгоритмов, добавили производительности и — самое главное — сделали для библиотеки Python интерфейс! Собственно, после окончания работ над Python оберткой библиотека и получила номер версии 2.0.  Ниже я подробнее расскажу о том, как это все происходило."
"3","Автоматизация машинного обучения","Datascience – это не только fit-predict Представим, что вы начали работать в компании, которая производит однообразные операции с бесконечными таблицами. Например, в крупном ретейлере или у ведущего оператора связи. Ежедневно перед вами ставят задачу выяснить, останется ли клиент с вами или хватит ли товара на полках до конца недели. Алгоритм выглядит просто. Вы берете выборку, изучаете бесконечные ряды признаков, удаляете мусор, генерируете новые признаки, собираете сводную таблицу. Подаете готовые данные в модель, настраиваете параметры и с нетерпением ждете заветных цифр итоговой метрики. Это повторяется день за днем. Затрачивая каждый день всего 60 минут на генерацию фич или подбор параметров, за месяц вы израсходуете минимум 20 часов. Это, без малого, целые сутки, за которые можно выполнить новую задачу, обучить нейросеть или прочесть несколько статей на arxiv’e. Удобно, когда структура данных не меняется. Стабильный набор лейблов и признаков каждый день. Вы понимаете алгоритм обработки и выстраиваете пайплайн. Однообразные таблички со знакомыми признаками начинают обрабатываться без вашего участия. Сложности начинаются в момент, когда признаки в данных становятся разными от задачи к задаче. Или, что еще страшнее, фич становится мало и модель начинает выдавать низкие метрики. Надо снова тратить время на предобработку. Рутина поглощает, блеск в глазах пропадает, продуктивность падает. Вы не первый, кто сталкивался с такими проблемами. Разработчики выкладывают в открытый доступ библиотеки, которые помогают автоматизировать однообразные операции."
"3","Оптимизация при помощи линейного поиска на Python","Линейный поиск — это алгоритм оптимизации, который может использоваться для целевых функций с одной или несколькими переменными. Он предоставляет возможность использовать алгоритм одномерной оптимизации, например поиск методом деления пополам (бисекции) для многомерной целевой функции, работая с линейным поиском для определения оптимального размера шага в каждом измерении от известной точки до оптимума. Мы уже делились переводами Джейсона Браунли, например статьёй о смешанных ансамблях, а в этом учебном руководстве, которое мы перевели к старту курса о машинном и глубоком обучении, рассказывается об основах: вы узнаете, как на Python с помощью линейного поиска выполнить оптимизацию."
"3","ML глазами практикующего трейдера","Сразу скажу что назвать себя программистом или знатоком машинном обучении у меня язык не поворачивается, скажем так - программирую я лучше 90% трейдеров и разбираюсь в трейдинге лучше 99% программистов и datascientists. Это не к тому что я такой молодец, это скорей к вопросу какая дыра непонимания существует между областями знаний, которую я попытаюсь немножко устранить. Я веду свой блог на трейдерском сайте, где описываю свои подходы прикрутить ML к трейдингу. При том что я сам весьма начинающий в области ML, прямо скажем я не часто встречаю релевантные отзывы, ибо 90% практикующих трейдеров о нейросетях только слышали и имеют представление о нем как о розовом пони. В равной мере когда я вижу как какой то чистый математик или програмист пробует реализовать свои знания применительно к фондовому рынку, у меня частенько начинает литься кровь из глаз. Написать свой первый пост на хабре меня сподвигла 2 статьи на хабре на тему прогнозирования активов, одна совсем древняя, другая свежая, я даже ее откаментировал. Так часто бывает когда что то хорошее вызывает желание алаверды. А статья хороша хотя бы тем, что там совершенно верный подход к трейдингу на финансовых рынках: ""выдвигаем гипотезу-тестируем на истории"". Ничего лучше не придумано (хотя наверно есть гении которые могут познав суть предмета, прогнозировать его дальнейшее состояние, даже такое, которое раньше не существовало в истории). Многие трейдеры вообще этого не понимают, предпочитая торговать по книжкам гуру или избитым техиндикаторам. Можно было бы бомбить эту статью комментариями, но справедливее, помимо критики было бы написать что то полезное для всех ребят из IT (""критикуешь?! А ты предложи что то взамен!""), которые вооружившись инструментарием ML хотят попробовать реализовать свои знания на финансовых рынках. А этот интерес очевидный, так как финансовый рынок как своего рода интеллектуальное казино предоставляет возможность капитализировать свои знания, трудолюбие, талант, осталось дело за малым - создать рабочий алгоритм позволяющий выносить денюжки с рынка. На языке трейдеров называется это алготрейдингом. Но много ли вы слышали о удачном применении ML в трейдинге? Я лично нет, хотя можно самоуспокоиться тем, что удачные реализации никто светить не будет, и все на самом деле работает и пока мы тут пишем и читаем, кто то удачно вооружившись градиентным бустингом или сверточной сетью делает профиты мозолистыми пальцами, холодной головой и горячим сердцем. Но сдается мне не так все просто. Помимо того что фондовый рынок вообще нельзя прогнозировать (ога!), тут есть некоторые проблемы реализации, которые я попытаюсь, путанно, но изложить."
"3","Сам себе Гутенберг. Делаем многоязычные параллельные книги","В прошлый раз мы с вами научились делать параллельные книги и сделали русско-английский вариант отрывка романа Харпер Ли ""Убить пересмешника"". Сегодня мы сделаем следующий шаг и создадим полноценную многоязычную книгу на восьми языках.  Напомню, что целью этого проекта является создание инструмента, который поможет людям, изучающим и преподающим иностранные языки, создавать учебные материалы и параллельные книги для улучшения навыков чтения. Глобальная проблема состоит в том, что трудно найти интересный для изучения материал с параллельным переводом, тогда как найти книгу в оригинале и ее русскую редакцию по отдельности гораздо проще.  Семь книг  Проделаем все на примере романа Булгакова ""Мастер и Маргарита"", потому что он очень популярен в мире и был переведен на множество языков. Я нашел его версии на английском и немецком (германские языки); белорусском, чешском и украинском (славянские языки); а также на венгерском и китайском языках. Все семь текстов мы выровняем с русским оригиналом, получим семь книг. Затем выровняем их между собой и получим возможность выбирать любые комбинации языков для своей книги в любом порядке. Полные версии книг можно будет скачать в формате pdf в конце статьи.  Начнем с пары венгерский-русский."
"3","Искусственный интеллект в юриспруденции. Вебинар № 4: Тренды и внедрение Legal AI","Сегодня мы рады представить Вам заключительный вебинар из цикла лекций об искусственном интеллекте, который посвящен вопросам внедрения Legal AI в практическую деятельность юристов и актуальным трендам из мира искусственного интеллекта."
"3","Quantization Aware Training. Или как правильно использовать fp16 inference в TensorRT","Low-precision inference в TensorRT сегодня - мастхэв, бест практис и прочие иностранные. Сконвертить из TensorFlow легко, запустить легко, использовать fp16 легко. Да и КПД выше, чем у pruning или distillation. На первый взгляд всё работает идеально. Но на самом деле всё ли так гладко? Рассказываем, как мы в TrafficData споткнулись об fp16, встали и написали статью."
"3","Матрица-Перематрица","Работа нейронной сети основана на манипуляциях с матрицами. Для обучения используются разнообразные методы, многие из которых выросли из метода градиентного спуска, где необходимо умение обращаться с матрицами, вычислять градиенты (производные по матрицам). Если заглянуть “под капот” нейронной сети, можно увидеть цепочки из матриц, выглядящие зачастую устрашающе. Проще говоря, “нас всех подстерегает матрица”. Пора познакомиться поближе. Для этого сделаем следующие шаги: рассмотрим манипуляции с матрицами : транспонирование, умножение, градиент; построим игрушечную нейронную сеть; познакомимся с методом обратного распространения ошибки с использованием метода градиентного спуска. Все шаги сопровождаются примерами кода с использованием только NumPy . Вычисления, не выходящие, впрочем, за рамки элементарной математики, приведены подробно. За индексами придется внимательно следить, но не отчаивайтесь, просто представьте, что каждый индекс - винтик, который надо закрутить, следуя простым правилам, но не пропустить. Если вдруг не разберетесь, ничего страшного - одно из двух: либо сбой в матрице, либо одно из двух."
"3","Демистификация Join в Apache Spark","Операции Join часто используются в типовых потоках анализа данных для корреляции двух наборов данных. Apache Spark, будучи унифицированным аналитическим движком, также обеспечил прочную основу для выполнения широкого спектра сценариев Join. На очень высоком уровне Join работает с двумя наборами входных данных, операция выполняется путем сопоставления каждой записи данных, принадлежащей одному из наборов входных данных, с каждой другой записью, принадлежащей другому набору входных данных. При обнаружении совпадения или несовпадения (в соответствии с заданным условием) операция Join может либо вывести отдельную сопоставляемую запись из любого из двух наборов данных, либо объединенную (Joined) запись. Объединенная запись представляет собой комбинацию отдельных сопоставляемых записей из обоих наборов данных."
"3","И чат, и бот, и логопед. Как разработать сервис на основе ML для диагностики дефектов речи у детей","«Шла Саша по шоссе», «Скажи: рррррыба», «Кукушка кукушонку...» – знаете, да, эти фразы, травмировавшие нас всех в детстве? Это был какой-то бесконечный эксперимент родителей с неоформленным желаемым результатом и главное – страхами, что их ребенок растет с дефектом речи.  Привет! Меня зовут Дима Пухов, я технический директор в Cleverbots. Хочу рассказать, как мы учили чат-бот распознавать дефекты речи и добились 80% точности в диагнозах ИИ-логопеда."
"3","Apache Spark 3.1: Spark on Kubernetes теперь общедоступен","С выходом Apache Spark 3.1 в марте 2021-го проект Spark on Kubernetes официально перешел в статус общедоступного и готового к эксплуатации. Это стало результатом трехлетней работы быстрорастущего сообщества, участники которого помогали в разработке и внедрении (изначально поддержка Spark on Kubernetes появилась в Spark 2.3 в феврале 2018 года). Команда Kubernetes aaS от Mail.ru Cloud Solutions перевела самое важное из статьи об основных возможностях Spark 3.1, в которой автор подробно остановился на улучшениях в Spark on Kubernetes."
"3","Как запустить модель машинного обучения на iPhone","Чего уж только на Хабре не было, и DOOM на осциллографе, тесте на беременности и калькуляторе запускали, даже сервер Minecraft на зеркалке Canon 200D поднимали. Сегодня же, специально к старту нового потока курса по Machine Learning и углубленного Machine Learning и Deep Learning, попробуем описать кратчайший путь от обучения модели машинного обучения на Python до доказательства концепции iOS-приложения, которое можно развернуть на iPhone. Цель статьи — дать базовый скаффолдинг, оставляя место для дальнейшей настройки, подходящей для конкретного случая использования."
"3","Преобразуем графику Fortnite в PUBG новым более быстрым подходом","Пару лет назад я показал, как мы можем использовать ИИ для переноса стилей, такой как CycleGAN, для преобразования графики одной игры, чтобы она выглядела похожей на другую, на примере Fortnite в PUBG. Этот проект до сих пор остается одним из самых просматриваемых, и спустя два года он все еще привлекает новых зрителей. Это означает, что это направление исследований в области ИИ вызывает большой интерес, но, к сожалению, мы пока не видим больших подвижек по превращению таких прототипов в реальность. Хотя и были представлены версии этого ИИ, работающие на более высоком разрешении, они нуждались в использованию нескольких графических процессоров для обучения, что является непрактичным для использования в реальном мире. К счастью, по прошествии большого количества времени у нас наконец-то есть статья, демонстрирующая значительный прогресс в попытке уменьшить вычислительную мощность, необходимую для обучения этого ИИ. Статья от Калифорнийского университета в Беркли и Adobe называется «Contrastive Learning (контрастное обучение) для непарного преобразования изображений» (CUT)."